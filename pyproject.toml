[project]
name = "Beer"
version = "0.1.0"
description = "Beer: Challenging Problems in Probability and Statistics"
authors = [
    {name = "Xiangzhuang Shen", email = "datahonor@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {file = "LICENSE-Apache-2.0"}
keywords = ["machine learning", "statistics", "probablity"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.14",
    "mkdocs-bibtex>=2.11.0",
    "mkdocstrings>=0.24.0",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocs-git-revision-date-localized-plugin>=1.2.4",
    "mkdocs-git-committers-plugin-2>=2.3.0",
    "mkdocs-autorefs>=0.5.0",
    "pymdown-extensions>=10.3",
    "mkdocs-simple-hooks>=0.1.5",
    "mkdocs-version-annotations>=1.0.0",
    "mkdocs-include-markdown-plugin>=6.0.1",
    "markdown-exec[ansi]>=1.6.0",
    "matplotlib>=3.8.0",
    "mkdocstrings-python>=1.9.2",
]

[project.optional-dependencies]
dev = [
    "ipython>=8.7.0",
    "tqdm>=4.0.0",
]
lint = [
    "black>=22.8.0",
    "pylint>=2.15.3",
    "flake8>=5.0.4",
    "mypy>=0.981",
    "isort>=5.10.1",
    "pre-commit>=3.8.0",
]


[project.urls]
Homepage = "https://shenxiangzhuang.github.io/beer/"
Repository = "https://github.com/shenxiangzhuang/beer"

[tool.setuptools]
packages = ["beer"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["LICENSE-Apache-2.0", "LICENSE-CC-BY-NC-SA", "README.md"]

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
lines_between_types = 1

[tool.pylint.'MASTER']
fail-under = 8.0

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "useless-super-delegation",
]

[tool.pylint.'FORMAT']
max-line-length = 88

[tool.pytest.ini_options]
addopts = "-v --cov=toydl --cov-fail-under 0 --cov-report=term --cov-report=xml --cov-report=html"
testpaths = [
    "tests",
]
markers = [
    "operator: operator related tests",
]

[tool.coverage.run]
omit = [
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'def __repr__',
]
fail_under = 90
precision = 1
skip_empty = true
sort = "-Cover"
