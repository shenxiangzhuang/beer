{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Beer: Challenging Problems in Probability and Statistics"},{"location":"#documentation","title":"Documentation","text":"<ul> <li>https://shenxiangzhuang.github.io/beer/</li> </ul>"},{"location":"#what-beer","title":"What beer?","text":"<ul> <li>See this blog: Why \ud83c\udf7a</li> </ul>"},{"location":"#wechat-group","title":"WeChat Group","text":"\u6211\u4eec\u6709\u4e00\u4e2a\u5c0f\u7684\u5fae\u4fe1\u7fa4\uff0c\u6b22\u8fce\u52a0\u5165\u4e00\u8d77\u8ba8\u8bba\u6709\u8da3\u7684\u95ee\u9898\uff01   \u53ef\u4ee5\u5148\u6dfb\u52a0\u6211\u7684\u5fae\u4fe1 (\u5fae\u4fe1\u53f7\uff1a<code>MathewShen</code>)\uff0c\u5907\u6ce8<code>beer</code>\u3002"},{"location":"#contributing","title":"Contributing","text":"<ul> <li>See CONTRIBUTING</li> </ul>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>See CODE_OF_CONDUCT</li> </ul>"},{"location":"#license","title":"License","text":"<ul> <li> <p>Non-code: CC BY-NC-SA 4.0  <p>Beer by Xiangzhuang Shen is licensed under CC BY-NC-SA 4.0</p></p> </li> <li> <p>Code: Apache-2.0</p> </li> </ul>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#010-2023-09-28","title":"[0.1.0] - 2023-09-28","text":"<p>Project init</p>"},{"location":"contributing/","title":"Contributing to the Beer Project","text":"<p>Thank you for your interest in contributing to the Beer project! We welcome contributions from everyone. This document will guide you through the process of setting up your development environment and submitting your contributions.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":""},{"location":"contributing/#fork-clone-and-branch","title":"Fork, Clone, and Branch","text":"<ol> <li>Fork the repository on GitHub.</li> <li>Clone your fork locally:    <pre><code>git clone https://github.com/your-username/beer.git\ncd beer\n</code></pre></li> <li>Create a new branch for your contribution:    <pre><code>git checkout -b your-feature-branch\n</code></pre></li> </ol>"},{"location":"contributing/#setting-up-the-development-environment","title":"Setting up the Development Environment","text":"<p>We use <code>pyproject.toml</code> to manage project dependencies. Here's how to set up your development environment:</p> <ol> <li> <p>Ensure you have Python 3.12 installed on your system.</p> </li> <li> <p>Install <code>uv</code> if you haven't already:    <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre></p> </li> <li> <p>Create a new virtual environment and install dependencies:    <pre><code>uv venv -p 3.12\nsource .venv/bin/activate  # On Unix or MacOS\n.venv\\Scripts\\activate  # On Windows\nuv pip install -e \".[dev,lint]\"\n</code></pre></p> </li> </ol> <p>This will install the project along with its dependencies, including development and linting tools.</p>"},{"location":"contributing/#adding-content","title":"Adding Content","text":""},{"location":"contributing/#adding-a-new-problem","title":"Adding a New Problem","text":"<ol> <li>Create a new Markdown file in the appropriate directory (e.g., <code>docs/fifty/</code> for the Fifty Challenging Problems).</li> <li>Use the similar [template]https://datahonor.com/beer/fifty/#problem-template) for your problem.</li> <li>Ensure you provide both English and Chinese versions for all sections.</li> <li>Include clear and detailed solutions, with both analytical and simulation approaches when applicable.</li> <li>Use code blocks with the <code>exec=\"true\"</code> attribute for runnable Python code.</li> <li>Place Python code snippets in separate files under the <code>docs/fifty/snippet/</code> directory and include them using the <code>--8&lt;--</code> syntax.</li> </ol>"},{"location":"contributing/#updating-existing-content","title":"Updating Existing Content","text":"<p>When updating existing problems or solutions:</p> <ol> <li>Maintain the bilingual format for all sections.</li> <li>Ensure mathematical correctness in both languages.</li> <li>Provide clear explanations for both analytical and simulation approaches.</li> <li>If adding or modifying code implementations, ensure they are correct, efficient, and follow the project's coding style.</li> <li>Update any related code snippets in the <code>docs/fifty/snippet/</code> directory.</li> </ol>"},{"location":"contributing/#testing-locally","title":"Testing Locally","text":"<p>Before submitting your changes, test them locally using MkDocs:</p> <ol> <li>Make sure you're in the project root directory.</li> <li>Run the following command to start a local preview server:    <pre><code>mkdocs serve\n</code></pre></li> <li>Open your web browser and go to <code>http://127.0.0.1:8000/</code> to view the site.</li> <li>Make sure your changes appear correctly and don't introduce any errors.</li> </ol>"},{"location":"contributing/#submitting-your-contribution","title":"Submitting Your Contribution","text":"<ol> <li>Commit your changes:    <pre><code>git add .\ngit commit -m \"Your descriptive commit message\"\n</code></pre></li> <li>Push your changes to your fork:    <pre><code>git push origin your-feature-branch\n</code></pre></li> <li>Go to the original Beer repository on GitHub and create a new pull request from your feature branch.</li> <li>Fill out the pull request template with all relevant information.</li> <li>Wait for the maintainers to review your pull request. They may ask for changes or clarifications.</li> </ol>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. You can find the full text of the Code of Conduct in the CODE_OF_CONDUCT.md file.</p> <p>Thank you for contributing to the Beer project!</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/04/15/about-beer/","title":"About Beer","text":""},{"location":"blog/2024/04/15/about-beer/#why","title":"Why","text":"<p>\u76f8\u4fe1\u5f88\u591a\u7edf\u8ba1\u5b66\u76f8\u5173\u4e13\u4e1a\u7684\u540c\u5b66\u90fd\u77e5\u9053 Box-Cox \u53d8\u6362\uff0c\u8fd9\u91cc Box \u5c31\u662f\u7edf\u8ba1\u5b66\u5de8\u64d8 George E. P. Box. \u5728\u5176\u8ba3\u544aRenowned statistician George Box dies at 93 \u4e2d\u6709\u8fd9\u4e48\u4e00\u6bb5\u5173\u4e8e Monday night beer and statistics sessions \u7684\u4ecb\u7ecd (\u8fd9\u5728\u5176\u4f20\u8bb0\u4e2d\u4e5f\u6709\u76f8\u5173\u7684\u4ecb\u7ecd)\u3002</p> <p>Monday night beer and statistics sessions</p> <p>Best known on campus were the Monday night beer and statistics sessions Box hosted at his home for students and other researchers. The gatherings sparked lively discussions about how statistics could help solve research problems posed by speakers from a wide range of disciplines.</p> <p>\u8fd9\u79cd\u79ef\u6781\u5f00\u653e\uff0c\u5171\u540c\u63a2\u8ba8\u7edf\u8ba1\u5b66\u5982\u4f55\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u7740\u5b9e\u4ee4\u4eba\u795e\u5f80\u3002 \u5373\u4f7f\u662f\u5728\u8bfb\u4e66\u7684\u65f6\u5019\u6211\u4e5f\u5f88\u5c11\u6709\u673a\u4f1a\u548c\u5927\u5bb6\u50cf\u8fd9\u6837\u4e00\u8d77\u8ba8\u8bba\u6709\u8da3\u7684\u95ee\u9898\u3002</p> <p>\u540e\u6765\u8bfb\u7814\u6709\u65f6\u4f1a\u548c\u5ba4\u53cb@SY \u4e00\u8d77\u89e3\u4e00\u4e9b\u6982\u7387\u7edf\u8ba1/\u7b97\u6cd5\u9898\u76ee\uff0c\u6709\u4e9b\u662f\u6e38\u620f\u76f8\u5173\u9762\u8bd5\u9898 (1)\uff0c\u6709\u4e9b\u662f\u81ea\u5df1\u9047\u5230\u7684\u4e00\u4e9b\u4e2d\u5927\u590d\u8bd5\u8003\u7814\u9898 (2) , \u6709\u4e9b\u6765\u81eaTomorrow\u5b66\u957f\u7684\u535a\u5ba2, \u8fd9\u671f\u95f4\u6211\u4e5f\u81ea\u5df1\u5199\u8fc7\u4e00\u4e9b\u76f8\u5173\u7684\u6587\u7ae0(3)\u3002</p> <ol> <li> \u6e38\u620f\u4e2d\u7684\u6982\u7387\u95ee\u9898\u2014\u2014\u6709\u8da3\u7684\u6982\u7387\u95ee\u9898\uff08\u4e00\uff09: \u4e4b\u524d\u548c@SY \u8ba8\u8bba\u8fc7\u7684\u4e00\u4e9b\u95ee\u9898\u611f\u89c9\u5f88\u6709\u610f\u601d\uff0c\u5c31\u62dc\u6258\u4ed6\u627e\u65f6\u95f4\u6574\u7406\u4e86\u4e0b\u6765\u3002</li> <li> A Fair Game Problem: \u4e2d\u5927\u8003\u7814\u590d\u8bd5\u7684\u4e00\u9053\u9898\uff0c@SY \u7ed9\u6211\u8bb2\u4e86\u4e24\u904d\u6ca1\u542c\u61c2\uff0c\u53c8\u627e Tomorrow \u5b66\u957f\u5e2e\u5fd9\u5199\u7684\u4e00\u4e2a\u89e3\u6790:)</li> <li>Three doors and three prisoners</li> </ol> <p>\u8fd9\u4e9b\u95ee\u9898\u7684\u672c\u8eab\u5c31\u8da3\u5473\u5341\u8db3\uff0c\u89e3\u51b3\u7684\u65b9\u6cd5\u66f4\u662f\u7075\u6d3b\u591a\u53d8\uff1a\u53ef\u4ee5\u7528\u6734\u7d20\u7684\u6982\u7387\u7edf\u8ba1\u601d\u60f3\u6c42\u89e3\uff0c\u4e5f\u53ef\u4ee5\u7528\u5f88\u201c\u53d6\u5de7\u201d(1) \u7684\u65b9\u5f0f\u6765\u5feb\u901f\u5f97\u5230\u7b54\u6848\uff0c \u4e5f\u53ef\u4ee5\u5199\u4ee3\u7801\u6765\u6a21\u62df\u95ee\u9898\u5f97\u5230\u6570\u503c\u89e3\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u5f53\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u901a\u8fc7\u591a\u79cd\u622a\u7136\u4e0d\u540c\u7684\u65b9\u5f0f\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u65f6\uff0c\u90a3\u79cd\u559c\u60a6\u662f\u96be\u4ee5\u8a00\u8868\u7684\u3002</p> <ol> <li>\u53ea\u662f\u770b\u4f3c\u53d6\u5de7\u800c\u5df2\uff0c\u5176\u80fd\u5feb\u901f\u89e3\u51b3\u95ee\u9898\u8fd8\u662f\u56e0\u4e3a\u8fd9\u79cd\u89e3\u6cd5\u66f4\u52a0\u63a5\u8fd1\u4e8e\u95ee\u9898\u7684\u672c\u8d28\u3002</li> </ol> <p>\u8fd9\u662f\u8bfb\u4e66\u65f6\u7684\u4e00\u4e9b\u7ecf\u5386\uff0c\u7b97\u662f Beer \u9879\u76ee\u7684\u840c\u82bd\u9636\u6bb5\u3002</p>"},{"location":"blog/2024/04/15/about-beer/#pastnowfuture","title":"Past/Now/Future","text":""},{"location":"blog/2024/04/15/about-beer/#past","title":"Past","text":"<p>\u540e\u6765\u5de5\u4f5c\uff0c\u4ece\u53e6\u5916\u7684\u89d2\u5ea6\u7684\u89c1\u8bc6\u5230\u4e86\u6982\u7387\u7edf\u8ba1\u7684\u4f5c\u7528\uff0c\u57fa\u4e8e\u6982\u7387\u7edf\u8ba1\u7684\u65b9\u6cd5\u4e00\u822c\u7b80\u6d01\u4f18\u96c5\uff0c\u590d\u6742\u5ea6\u4f4e\u4e14\u5177\u6709\u5f88\u5f3a\u7684\u53ef\u89e3\u91ca\u6027\u2014\u2014\u8fd9\u4e9b \u7279\u8d28\u4f7f\u5f97\u5176\u6210\u4e3a\u7b97\u6cd5\u843d\u5730\u65f6\u5f88\u597d\u7684\u9009\u62e9\u3002</p> <p>\u8fd9\u79cd\u5728\u771f\u5b9e\u4e16\u754c\u53d1\u6325\u4f5c\u7528\u7684\u65b9\u5f0f\u8ba9\u6211\u5bf9\u6982\u7387\u7edf\u8ba1\u7684\u8ba4\u8bc6\u5f97\u5230\u4e86\u5f88\u5927\u7684\u62d3\u5c55\u3002\u8bfb\u4e66\u65f6\u5019\u5b66\u5230\u7684\u90a3\u4e9b\u62bd\u8c61\u7684\u6982\u5ff5\uff1a\u5e15\u7d2f\u6258\u5206\u5e03\uff0c\u6e38\u7a0b\u68c0\u9a8c\uff0c Wilcoxon-Mann-Whitney statistic \u7b49\u7b49\u8fd9\u4e9b\u90fd\u53d8\u5f97\u9c9c\u6d3b\u8d77\u6765\u2014\u2014\u8fd9\u540c\u6837\u8ba9\u6211\u611f\u89c9\u975e\u5e38\u5730\u5feb\u4e50\u3002</p> <p>\u6211\u548c\u540c\u4e8b\u63d0\u8fc7\u8bf4\u6709\u673a\u4f1a\u7684\u8bdd\u6211\u4e5f\u60f3\u8bd5\u8bd5\u641e\u4e0b\u7c7b\u4f3c Monday night beer and statistics sessions \u7684\u4e1c\u897f\uff0c \u4ed6\u8bf4\u5f88\u611f\u5174\u8da3\uff0c\u8ba9\u6211\u5230\u65f6\u5019\u558a\u4ed6\u4e00\u8d77\u2014\u2014\u53ef\u60dc\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\uff0c\u6b64\u4e8b\u4e00\u76f4\u672a\u80fd\u6210\u884c:)</p>"},{"location":"blog/2024/04/15/about-beer/#now","title":"Now","text":"<p>\u540e\u6765\u5076\u7136\u770b\u5230Fifty challenging problems in probability\u8fd9\u672c\u4e66\uff0c\u53d1\u73b0\u4e86\u4e66\u4e2d\u8bb0\u5f55\u4e86\u5f88\u591a\u6709\u8da3\u7684\u95ee\u9898\u3002 \u8fd9\u4e00\u6b21\u6211\u51b3\u5b9a\u771f\u6b63\u5f00\u59cb\u54c1\u5c1d\u8fd9\u676f:beer\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u73b0\u5728\u7684Beer, \u76ee\u524d\u4e3b\u8981\u662f Fifty challenging problems in probability\u4e66\u4e2d\u51e0\u4e2a\u95ee\u9898\u7684\u89e3\u7b54\uff1aBeer/Fifty.</p> <p>\u76ee\u524d\u5bf9\u4e8e\u6bcf\u4e2a\u95ee\u9898\u90fd\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u63d0\u793a\uff0c\u89e3\u6790\u89e3\uff0c\u6570\u503c\u6a21\u62df\u4ee3\u7801\uff0c\u4e0b\u9762\u662f\u7b2c\u4e00\u9053\u9898\u7684\u9898\u5e72\u548c\u5bf9\u5e94\u7684\u7b54\u6848\u3002 \u8fd9\u91cc\u91cd\u70b9\u63d0\u4e0b\uff0c\u6a21\u62df\u7a0b\u5e8f\u7684\u4ee3\u7801\u662f\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u6211\u4eec\u5237\u65b0\u7f51\u9875\uff0c\u8fd9\u4e2a\u6a21\u62df\u5c31\u4f1a\u6267\u884c\u4e00\u6b21\u5168\u65b0\u7684\u6a21\u62df\u3002</p>"},{"location":"blog/2024/04/15/about-beer/#the-sock-drawer","title":"The Sock Drawer","text":""},{"location":"blog/2024/04/15/about-beer/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>A drawer contains red socks and black socks. When two socks are drawn at random, the probability that both are red is \\(\\frac{1}{2}\\)</p> <p>(a) How small can the number of socks in the drawer be?</p> <p>(b) How small if the number of black socks is even?</p> <p>\u4e00\u4e2a\u62bd\u5c49\u91cc\u88c5\u6709\u7ea2\u889c\u5b50\u548c\u9ed1\u889c\u5b50\u3002 \u5f53\u968f\u673a\u62bd\u53d6\u4e24\u53ea\u889c\u5b50\u65f6\uff0c\u4e24\u53ea\u889c\u5b50\u90fd\u662f\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{1}{2}\\)</p> <p>(a) \u62bd\u5c49\u91cc\u7684\u889c\u5b50\u6570\u91cf\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p> <p>(b) \u5982\u679c\u9ed1\u889c\u5b50\u7684\u6570\u91cf\u662f\u5076\u6570\uff0c\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p>"},{"location":"blog/2024/04/15/about-beer/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Use probability equations to solve for radicals, Pell's equation</p> <p>\u6982\u7387\u7b49\u5f0f\u7528\u4e8e\u6839\u5f0f\u6c42\u89e3\uff0cPell\u65b9\u7a0b</p>"},{"location":"blog/2024/04/15/about-beer/#solutions","title":"Solutions","text":""},{"location":"blog/2024/04/15/about-beer/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let the number of red socks be denoted as \\(R \\in \\mathbb{Z}^{+}\\), and the total number of socks be denoted as \\(N \\in \\mathbb{Z}^{+}\\), where \\(N &gt; R\\). The probability of randomly picking a red sock on the first draw is \\(\\frac{R}{N}\\), and the probability of picking another red sock after picking a red sock on the first draw is \\(\\frac{R-1}{N-1}\\). Therefore, we have:</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>Simplifying this equation, we get:</p> \\[N^2 - N + 2R(1-R) = 0\\] <p>Since our goal is to find the minimum value of \\(N\\), combining the above conditions, the original problem can be formulated as the following integer programming problem:</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>As for the canonical solution to this integer programming problem... I'm not quite familiar with it (feel free to submit a pull request to supplement it). Here, we'll use a relatively simple approach.</p> <p>Based on \\(N^2 - N + 2R(1-R) = 0\\), since our goal is to find \\(N\\), we can treat it as an unknown and use the quadratic formula to derive the corresponding values. Therefore, we have:</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>Considering the conditions that \\(N\\) and \\(R\\) are both positive integers, we can calculate:</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>And it must hold that \\(\\sqrt{1 - 8R(1-R)}\\) is an odd number, which requires \\(1 - 8R(1-R)\\) to be a perfect square.</p> <p>We can find values that satisfy these conditions through an iterative approach:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u8bb0\u7ea2\u8272\u889c\u5b50\u7684\u4e2a\u6570\u4e3a\\(R \\in \\mathbb{Z}^{+}\\)\uff0c\u889c\u5b50\u603b\u6570\u4e3a\\(N \\in \\mathbb{Z}^{+}\\), \u4e14\\(N &gt; R\\)\uff0c \u90a3\u4e48\u7b2c\u4e00\u6b21\u968f\u673a\u62ff\u5230\u7ea2\u889c\u5b50\u7684\u6982\u7387\\(\\frac{R}{N}\\)\uff0c\u5728\u7b2c\u4e00\u6b21\u62ff\u5230\u7ea2\u889c\u5b50\u540e\u7b2c\u4e8c\u6b21\u53c8\u62ff\u5230\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{R-1}{N-1}\\)\uff0c\u7531\u6b64\u5f97</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>\u5316\u7b80\u5f97\uff0c</p> \\[N^2 - N + 2R(R-1) = 0\\] <p>\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\u7684\u6700\u5c0f\u503c\uff0c\u7efc\u5408\u4ee5\u4e0a\u6761\u4ef6\uff0c\u539f\u95ee\u9898\u53ef\u4ee5\u6574\u7406\u4e3a\u5982\u4e0b\u6574\u6570\u89c4\u5212\u95ee\u9898</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>\u81f3\u4e8e\u8fd9\u4e2a\u6574\u6570\u89c4\u5212\u95ee\u9898\u7684\u89c4\u8303\u89e3\u6cd5...\u6211\u8fd8\u4e0d\u592a\u4f1a(\u6b22\u8fce\u63d0PR\u8865\u5145). \u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u76f8\u5bf9\u7b80\u5355\u7684\u89e3\u6cd5\u3002</p> <p>\u6839\u636e\\(N^2 - N + 2R(1-R) = 0\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u672a\u77e5\u6570\uff0c\u7136\u540e\u7528\u6c42\u6839\u516c\u5f0f\u6765\u63a5\u51fa\u5bf9\u5e94\u7684\u503c\uff0c\u6240\u4ee5\u6709</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u6839\u636e\\(N\\), \\(R\\)\u5747\u4e3a\u6b63\u6574\u6570\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u7b97\u51fa</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u4e14\u5fc5\u987b\u6709\\(\\sqrt{1 - 8R(1-R)}\\)\u4e3a\u5947\u6570\uff0c\u8fd9\u5c31\u8981\u6c42\\(1 - 8R(1-R)\\)\u5fc5\u987b\u4e3a\u5e73\u65b9\u6570\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u7684\u65b9\u6cd5\u6765\u6c42\u51fa\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u503c:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u6700\u7ec8\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"blog/2024/04/15/about-beer/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The above method is to analyze the simplified problem first and then solve it. We can also make full use of the powerful computing power of the computer to directly solve this problem. Let\u2019s take a look at the \"violent aesthetics\" of computers!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u5148\u5206\u6790\u7b80\u5316\u95ee\u9898\u4e4b\u540e\u518d\u6c42\u89e3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u5f3a\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u6765\u76f4\u63a5\u6c42\u89e3\u672c\u95ee\u9898\u3002 \u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e0b\u8ba1\u7b97\u673a\u7684\u201c\u66b4\u529b\u7f8e\u5b66\u201d\u5427!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u76f8\u540c\u7684\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"blog/2024/04/15/about-beer/#future","title":"Future","text":"<p>\u5173\u4e8e\u7684\u672a\u6765\uff0c\u73b0\u5728\u7684\u8ba1\u5212\u4e3b\u8981\u662f\u5206\u6210\u4e09\u90e8\u5206\uff1a\u7c7b\u4f3c Fifty \u8fd9\u79cd\u4e60\u9898\u96c6\u5355\u72ec\u4e00\u4e2a\u90e8\u5206\uff0c\u5404\u7c7b\u8bb0\u5f55\u5728\u5404\u4e2a\u5730\u65b9\u7684\u65e0\u51fa\u5904\u53ef\u8003\u7684\u9898\u76ee\u4f5c\u4e3a\u4e00\u4e2a\u90e8\u5206\uff0c \u6700\u540e\u4e00\u90e8\u5206\u662f\u5de5\u4e1a\u754c\u4e00\u4e9b\u7684\u5b9e\u9645\u7684\u6848\u4f8b\u3002 \u76ee\u524d\u662f\u4e13\u6ce8\u5728\u7b2c\u4e00\u90e8\u5206\uff0c\u540e\u7eed\u7684 Roadmap \u4f1a\u66f4\u65b0\u5230Issue\u3002</p>"},{"location":"blog/2024/04/15/about-beer/#help-wanted","title":"Help Wanted","text":"<p>\u4e2a\u4eba\u7684\u529b\u91cf\u7ec8\u7a76\u662f\u6709\u9650\u7684\uff0c\u6b22\u8fce\u5927\u5bb6\u4e00\u8d77\u53c2\u4e0e\u5efa\u8bbe\uff0c\u4e00\u8d77\u611f\u53d7\u6982\u7387\u7edf\u8ba1\u7684\u4e50\u8da3\u3002 \u6b22\u8fce\u5404\u7c7b\u8d21\u732e\uff1a\u63d0\u5efa\u8bae\uff0c\u63d0\u4f9b\u9898\u76ee\uff0c\u63d0\u4f9b\u89e3\u7b54\u7b49\u90fd\u53ef\u4ee5\u3002</p> <p>\u5176\u5b9e\u53ea\u8981\u4e86\u89e3\u6982\u7387\u7edf\u8ba1\u57fa\u7840\u77e5\u8bc6\u548c\u57fa\u672c\u7684\u7f16\u7a0b\u77e5\u8bc6\u5c31\u53ef\u4ee5\u8bd5\u7740\u505a\u4e00\u4e9b\u4ee3\u7801\u8d21\u732e\u4e86\uff0c \u5982\u679c\u5927\u5bb6\u5728 PR \u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\u6b22\u8fce\u5728Discussion\u63d0\u95ee\uff0c \u6211\u4f1a\u5c3d\u91cf\u5e2e\u52a9\u5927\u5bb6\u89e3\u51b3\uff01</p>"},{"location":"blog/2024/10/14/fertility_policy/","title":"\u751f\u80b2\u653f\u7b56\u4e0e\u7537\u5973\u6bd4\u4f8b (Fertility Policy)","text":""},{"location":"blog/2024/10/14/fertility_policy/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>If a family stops having children after giving birth to a boy, and continues to have children after giving birth to a girl until a boy is born, the question is: What will the gender ratio be in this place?</p> <p>\u5982\u679c\u4e00\u4e2a\u5bb6\u5ead\u751f\u4e0b\u7537\u5b69\u5c31\u4e0d\u518d\u751f\u5b69\u5b50\uff0c\u5982\u679c\u662f\u5973\u5b69\u5b50\u5c31\u7ee7\u7eed\u751f\uff0c\u76f4\u5230\u751f\u51fa\u7537\u5b69\u4e3a\u6b62\uff0c\u95ee\uff1a\u8fd9\u4e2a\u5730\u65b9\u7684\u7537\u5973\u6bd4\u4f8b\u4f1a\u662f\u591a\u5c11\uff1f</p>"},{"location":"blog/2024/10/14/fertility_policy/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>There are many solutions, which can be approached from the perspectives of expectation, geometric distribution, probability, biology, etc.</p> <p>\u5f88\u591a\u79cd\u89e3\u6cd5\uff0c\u53ef\u4ee5\u4ece\u671f\u671b\u3001\u51e0\u4f55\u5206\u5e03\u3001\u6982\u7387\uff0c\u751f\u7269\u5b66\u7b49\u89d2\u5ea6\u5165\u624b\u3002</p>"},{"location":"blog/2024/10/14/fertility_policy/#solutions","title":"Solutions","text":""},{"location":"blog/2024/10/14/fertility_policy/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1 English\u4e2d\u6587 <p>Since there is only one boy in a family, asking about the ratio of boys to girls is equivalent to asking the average number of girls per family.</p> <p>Let the number of girls in a family be \\(X\\), and the average number of girls per family be \\(E(X)\\), and the problem is transformed into solving \\(1:E(X)\\).</p> <p>Since the probability of having a boy and a girl is equal, the distribution of X is as follows:</p> X Sequence Probability 0 Male \\(\\frac{1}{2}\\) 1 Female, Male \\((\\frac{1}{2})^2\\) 2 Female, Female, Male \\((\\frac{1}{2})^3\\) 3 Female, Female, Female, Male \\((\\frac{1}{2})^4\\) <p>According to the definition of expectation, \\(E(X)\\) satisfies the following equation:</p> \\[ \\begin{align}     E(X) &amp;= \\frac{1}{2} \\times 0 + (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\\\          &amp;= (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\end{align} \\] <p>Therefore,</p> \\[     2E(X) = (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 2 + \\cdots \\] <p>Subtracting the two equations, we get:</p> \\[ \\begin{align}     E(X) &amp;= (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 1 + \\cdots \\\\          &amp;= lim_{n\\to\\infty} \\frac{\\frac{1}{2}(1-(\\frac{1}{2})^n)}{1-\\frac{1}{2}} \\\\          &amp;= \\frac{\\frac{1}{2} \\times 1}{\\frac{1}{2}} \\\\          &amp;= 1 \\end{align} \\] <p>\u56e0\u4e3a\u4e00\u4e2a\u5bb6\u5ead\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7537\u5b69\uff0c\u6240\u4ee5\u95ee\u7537\u5973\u6bd4\u4f8b\u7b49\u4ef7\u4e8e\u95ee\u5e73\u5747\u6bcf\u4e2a\u5bb6\u5ead\u5973\u5b69\u7684\u6570\u91cf\u3002 \u8bbe\u5bb6\u5ead\u4e2d\u5973\u5b69\u7684\u6570\u91cf\u4e3a\\(X\\), \u5e73\u5747\u6bcf\u4e2a\u5bb6\u5ead\u5973\u5b69\u7684\u6570\u91cf\u5219\u4e3a\\(E(X)\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\\(1:E(X)\\)\u3002</p> <p>\u7531\u4e8e\u751f\u7537\u5b69\u548c\u751f\u5973\u5b69\u7684\u6982\u7387\u76f8\u7b49\uff0cX\u7684\u5206\u5e03\u5982\u4e0b\uff1a</p> X Sequence Probability 0 \u7537 \\(\\frac{1}{2}\\) 1 \u5973\u7537 \\((\\frac{1}{2})^2\\) 2 \u5973\u5973\u7537 \\((\\frac{1}{2})^3\\) 3 \u5973\u5973\u5973\u7537 \\((\\frac{1}{2})^4\\) ... ... ... <p>\u6839\u636e\u671f\u671b\u7684\u5b9a\u4e49, \\(E(X)\\)\u6ee1\u8db3\u4e0b\u5f0f\uff1a</p> \\[ \\begin{align}     E(X) &amp;= \\frac{1}{2} \\times 0 + (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\\\          &amp;= (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\end{align} \\] <p>\u56e0\u6b64,</p> \\[     2E(X) = (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 2 + \\cdots \\] <p>\u4e24\u5f0f\u76f8\u51cf\u5f97\u5230\uff1a</p> \\[ \\begin{align}     E(X) &amp;= (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 1 + \\cdots \\\\          &amp;= lim_{n\\to\\infty} \\frac{\\frac{1}{2}(1-(\\frac{1}{2})^n)}{1-\\frac{1}{2}} \\\\          &amp;= \\frac{\\frac{1}{2} \\times 1}{\\frac{1}{2}} \\\\          &amp;= 1 \\end{align} \\]"},{"location":"blog/2024/10/14/fertility_policy/#solution2-analysis","title":"Solution2: Analysis","text":"Solution2 English\u4e2d\u6587 <p>Define that when a family gives birth to a boy, the total number of children in the current family is \\(X\\), and the number of girls is \\(Y\\), then \\(X\\) meets the definition of geometric distribution (strictly speaking, it should be shifted geometric distribution), which is the probability distribution of the number of first successes in the Bernoulli test, and \\(p=\\frac{1}{2}\\). According to the expected formula of geometric distribution, we have:</p> \\[ E(X) = \\frac{1}{p} = 2 \\] <p>Because the number of boys is 1, the number of girls is \\(Y=X-1\\), so we have:</p> \\[ E(Y) = E(X-1) = E(X) - 1 = 1 \\] <p>That is, there is an average of 1 girl in each family, so the ratio of boys to girls is 1:1.</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u5bb6\u5ead\u751f\u4e0b\u7537\u5b69\u65f6\uff0c\u5f53\u524d\u5bb6\u5ead\u5b69\u5b50\u7684\u603b\u6570\u91cf\u4e3a\\(X\\), \u5973\u5b69\u6570\u91cf\u4e3a\\(Y\\), \u5219\\(X\\)\u7b26\u5408\u51e0\u4f55\u5206\u5e03(\u4e25\u683c\u6765\u8bf4\u5e94\u8be5\u662fshifted geometric distribution)\u7684\u5b9a\u4e49\uff0c \u5373\u4e3aBernoulli\u8bd5\u9a8c\u4e2d\u7b2c\u4e00\u6b21\u6210\u529f\u7684\u6b21\u6570\u7684\u6982\u7387\u5206\u5e03, \u6b64\u65f6\\(p=\\frac{1}{2}\\)\u3002 \u6839\u636e\u51e0\u4f55\u5206\u5e03\u7684\u671f\u671b\u516c\u5f0f\uff0c\u6709:</p> \\[     E(X) = \\frac{1}{p} = 2 \\] <p>\u56e0\u4e3a\u7537\u5b69\u6570\u91cf\u4e3a1\uff0c\u6240\u4ee5\u5973\u5b69\u6570\u91cf\u4e3a\\(Y=X-1\\)\uff0c\u6240\u4ee5\u6709:</p> \\[     E(Y) = E(X-1) = E(X) - 1 = 1 \\] <p>\u5373\u6bcf\u4e2a\u5bb6\u5ead\u5e73\u5747\u67091\u4e2a\u5973\u5b69\uff0c\u6240\u4ee5\u7537\u5973\u6bd4\u4f8b\u4e3a1:1\u3002</p>"},{"location":"blog/2024/10/14/fertility_policy/#solution3-elegant-analysis","title":"Solution3: Elegant Analysis","text":"Solution3 English\u4e2d\u6587 <p>Consider a birth process as an event, let event A be the birth of a boy, and event B be the birth of a girl. Then: \\(P(A) = \\frac{1}{2}\\), \\(P(B) = \\frac{1}{2}\\). Regardless of the birth policy, it is ultimately a series of independent birth events, so the final male-female ratio is 1:1.</p> <p>\u628a\u4e00\u6b21\u751f\u80b2\u8fc7\u7a0b\u770b\u4f5c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u8bbe\u4e8b\u4ef6A\u4e3a\u751f\u7537\u5b69\uff0c\u4e8b\u4ef6B\u4e3a\u751f\u5973\u5b69\u3002 \u5219\u6709: \\(P(A) = \\frac{1}{2}\\), \\(P(B) = \\frac{1}{2}\\). \u65e0\u8bba\u751f\u80b2\u653f\u7b56\u5982\u4f55\uff0c\u6700\u7ec8\u90fd\u662f\u4e00\u7cfb\u5217\u76f8\u4e92\u72ec\u7acb\u7684\u751f\u80b2\u4e8b\u4ef6\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u7537\u5973\u6bd4\u4f8b\u662f1:1\u3002</p>"},{"location":"blog/2024/10/14/fertility_policy/#solution4-simulation","title":"Solution4: Simulation","text":"Solution4 English\u4e2d\u6587 <p>We can simulate the birth process to obtain the numerical solution of the gender ratio under the current fertility policy:</p> <pre><code>import random\n\nfrom enum import Enum\n\n\nclass Gender(int, Enum):\n    MALE = 0\n    FEMALE = 1\n\n\ndef birth_event() -&gt; Gender:\n    if random.randint(0, 1) == 0:\n        return Gender.MALE\n    else:\n        return Gender.FEMALE\n\n\ndef family_event() -&gt; int:\n    female_count = 0\n    while birth_event() != Gender.MALE:\n        female_count += 1\n    return female_count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    male_count, female_count = 0, 0\n    for _ in range(run_nums):\n        female_count += family_event()\n        male_count += 1\n    print(f\"Males: {male_count}, Females: {female_count}\\n\")\n    print(f\"Males/Female: {male_count / female_count}\\n\")\n\n\nsimulation()\n</code></pre> <p>Males: 100000, Females: 99818</p> <p>Males/Female: 1.00182331843956</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u751f\u80b2\u7684\u8fc7\u7a0b\u6765\u5f97\u5230\u5f53\u524d\u751f\u80b2\u653f\u7b56\u4e0b\u6027\u522b\u6bd4\u4f8b\u7684\u6570\u503c\u89e3:</p> <pre><code>import random\n\nfrom enum import Enum\n\n\nclass Gender(int, Enum):\n    MALE = 0\n    FEMALE = 1\n\n\ndef birth_event() -&gt; Gender:\n    if random.randint(0, 1) == 0:\n        return Gender.MALE\n    else:\n        return Gender.FEMALE\n\n\ndef family_event() -&gt; int:\n    female_count = 0\n    while birth_event() != Gender.MALE:\n        female_count += 1\n    return female_count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    male_count, female_count = 0, 0\n    for _ in range(run_nums):\n        female_count += family_event()\n        male_count += 1\n    print(f\"Males: {male_count}, Females: {female_count}\\n\")\n    print(f\"Males/Female: {male_count / female_count}\\n\")\n\n\nsimulation()\n</code></pre> <p>Males: 100000, Females: 100298</p> <p>Males/Female: 0.9970288540150352</p>"},{"location":"blog/2024/10/14/follow-verify/","title":"Follow Verify","text":"<p>This message is used to verify that this feed (feedId:68129539361563648) belongs to me (userId:41781781100792832). Join me in enjoying the next generation information browser https://follow.is.</p>"},{"location":"blog/2024/10/13/the-sock-drawer/","title":"The Sock Drawer","text":""},{"location":"blog/2024/10/13/the-sock-drawer/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>A drawer contains red socks and black socks. When two socks are drawn at random, the probability that both are red is \\(\\frac{1}{2}\\)</p> <p>(a) How small can the number of socks in the drawer be?</p> <p>(b) How small if the number of black socks is even?</p> <p>\u4e00\u4e2a\u62bd\u5c49\u91cc\u88c5\u6709\u7ea2\u889c\u5b50\u548c\u9ed1\u889c\u5b50\u3002 \u5f53\u968f\u673a\u62bd\u53d6\u4e24\u53ea\u889c\u5b50\u65f6\uff0c\u4e24\u53ea\u889c\u5b50\u90fd\u662f\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{1}{2}\\)</p> <p>(a) \u62bd\u5c49\u91cc\u7684\u889c\u5b50\u6570\u91cf\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p> <p>(b) \u5982\u679c\u9ed1\u889c\u5b50\u7684\u6570\u91cf\u662f\u5076\u6570\uff0c\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p>"},{"location":"blog/2024/10/13/the-sock-drawer/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Use probability equations to solve for radicals, Pell's equation</p> <p>\u6982\u7387\u7b49\u5f0f\u7528\u4e8e\u6839\u5f0f\u6c42\u89e3\uff0cPell\u65b9\u7a0b</p>"},{"location":"blog/2024/10/13/the-sock-drawer/#solutions","title":"Solutions","text":""},{"location":"blog/2024/10/13/the-sock-drawer/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let the number of red socks be denoted as \\(R \\in \\mathbb{Z}^{+}\\), and the total number of socks be denoted as \\(N \\in \\mathbb{Z}^{+}\\), where \\(N &gt; R\\). The probability of randomly picking a red sock on the first draw is \\(\\frac{R}{N}\\), and the probability of picking another red sock after picking a red sock on the first draw is \\(\\frac{R-1}{N-1}\\). Therefore, we have:</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>Simplifying this equation, we get:</p> \\[N^2 - N + 2R(1-R) = 0\\] <p>Since our goal is to find the minimum value of \\(N\\), combining the above conditions, the original problem can be formulated as the following integer programming problem:</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>As for the canonical solution to this integer programming problem... I'm not quite familiar with it (feel free to submit a pull request to supplement it). Here, we'll use a relatively simple approach.</p> <p>Based on \\(N^2 - N + 2R(1-R) = 0\\), since our goal is to find \\(N\\), we can treat it as an unknown and use the quadratic formula to derive the corresponding values. Therefore, we have:</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>Considering the conditions that \\(N\\) and \\(R\\) are both positive integers, we can calculate:</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>And it must hold that \\(\\sqrt{1 - 8R(1-R)}\\) is an odd number, which requires \\(1 - 8R(1-R)\\) to be a perfect square.</p> <p>We can find values that satisfy these conditions through an iterative approach:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u8bb0\u7ea2\u8272\u889c\u5b50\u7684\u4e2a\u6570\u4e3a\\(R \\in \\mathbb{Z}^{+}\\)\uff0c\u889c\u5b50\u603b\u6570\u4e3a\\(N \\in \\mathbb{Z}^{+}\\), \u4e14\\(N &gt; R\\)\uff0c \u90a3\u4e48\u7b2c\u4e00\u6b21\u968f\u673a\u62ff\u5230\u7ea2\u889c\u5b50\u7684\u6982\u7387\\(\\frac{R}{N}\\)\uff0c\u5728\u7b2c\u4e00\u6b21\u62ff\u5230\u7ea2\u889c\u5b50\u540e\u7b2c\u4e8c\u6b21\u53c8\u62ff\u5230\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{R-1}{N-1}\\)\uff0c\u7531\u6b64\u5f97</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>\u5316\u7b80\u5f97\uff0c</p> \\[N^2 - N + 2R(R-1) = 0\\] <p>\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\u7684\u6700\u5c0f\u503c\uff0c\u7efc\u5408\u4ee5\u4e0a\u6761\u4ef6\uff0c\u539f\u95ee\u9898\u53ef\u4ee5\u6574\u7406\u4e3a\u5982\u4e0b\u6574\u6570\u89c4\u5212\u95ee\u9898</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>\u81f3\u4e8e\u8fd9\u4e2a\u6574\u6570\u89c4\u5212\u95ee\u9898\u7684\u89c4\u8303\u89e3\u6cd5...\u6211\u8fd8\u4e0d\u592a\u4f1a(\u6b22\u8fce\u63d0PR\u8865\u5145). \u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u76f8\u5bf9\u7b80\u5355\u7684\u89e3\u6cd5\u3002</p> <p>\u6839\u636e\\(N^2 - N + 2R(1-R) = 0\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u672a\u77e5\u6570\uff0c\u7136\u540e\u7528\u6c42\u6839\u516c\u5f0f\u6765\u63a5\u51fa\u5bf9\u5e94\u7684\u503c\uff0c\u6240\u4ee5\u6709</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u6839\u636e\\(N\\), \\(R\\)\u5747\u4e3a\u6b63\u6574\u6570\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u7b97\u51fa</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u4e14\u5fc5\u987b\u6709\\(\\sqrt{1 - 8R(1-R)}\\)\u4e3a\u5947\u6570\uff0c\u8fd9\u5c31\u8981\u6c42\\(1 - 8R(1-R)\\)\u5fc5\u987b\u4e3a\u5e73\u65b9\u6570\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u7684\u65b9\u6cd5\u6765\u6c42\u51fa\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u503c:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u6700\u7ec8\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"blog/2024/10/13/the-sock-drawer/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The above method is to analyze the simplified problem first and then solve it. We can also make full use of the powerful computing power of the computer to directly solve this problem. Let\u2019s take a look at the \"violent aesthetics\" of computers!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u5148\u5206\u6790\u7b80\u5316\u95ee\u9898\u4e4b\u540e\u518d\u6c42\u89e3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u5f3a\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u6765\u76f4\u63a5\u6c42\u89e3\u672c\u95ee\u9898\u3002 \u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e0b\u8ba1\u7b97\u673a\u7684\u201c\u66b4\u529b\u7f8e\u5b66\u201d\u5427!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u76f8\u540c\u7684\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"fifty/","title":"Fifty challenging problems in probability","text":""},{"location":"fifty/#introduction","title":"Introduction","text":"<p>Problems in <code>fifty</code> section come from the book: Fifty challenging problems in probability.</p>"},{"location":"fifty/#problem-template","title":"Problem Template(\u9898\u76ee\u6a21\u677f)","text":"Problem Template(\u9898\u76ee\u6a21\u677f) Code(<code>docs/util/problem_template.md</code>)Show <pre><code># The Problem Name\n\n## Problem\n\n???+ question \"Question\"\n\n    === \"English\"\n\n        The question in English\n\n    === \"\u4e2d\u6587\"\n\n        \u9898\u76ee\u63cf\u8ff0\n\n\n## Tip\n\n??? tip \"Tip\"\n\n    === \"English\"\n\n        Provide some tips/hints that are helpful to solve the problem.\n        Be careful not to leak the answer here.\n\n    === \"\u4e2d\u6587\"\n\n        \u63d0\u4f9b\u89e3\u9898\u63d0\u793a\u4e0e\u7ebf\u7d22\u3002\u6ce8\u610f\u4e0d\u8981\u5728\u8fd9\u91cc\u6cc4\u6f0f\u7b54\u6848\n\n\n## Solutions\n\n### Solution1\n\n??? success \"Solution1\"\n\n    === \"English\"\n\n        The solution\n\n    === \"\u4e2d\u6587\"\n\n        \u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848\n\n\n### (Optional)Solution2\n\n??? success \"Solution2\"\n\n    === \"English\"\n\n        The solution\n\n    === \"\u4e2d\u6587\"\n\n        \u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848\n</code></pre>"},{"location":"fifty/#the-problem-name","title":"The Problem Name","text":""},{"location":"fifty/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>The question in English</p> <p>\u9898\u76ee\u63cf\u8ff0</p>"},{"location":"fifty/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Provide some tips/hints that are helpful to solve the problem. Be careful not to leak the answer here.</p> <p>\u63d0\u4f9b\u89e3\u9898\u63d0\u793a\u4e0e\u7ebf\u7d22\u3002\u6ce8\u610f\u4e0d\u8981\u5728\u8fd9\u91cc\u6cc4\u6f0f\u7b54\u6848</p>"},{"location":"fifty/#solutions","title":"Solutions","text":""},{"location":"fifty/#solution1","title":"Solution1","text":"Solution1 English\u4e2d\u6587 <p>The solution</p> <p>\u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848</p>"},{"location":"fifty/#optionalsolution2","title":"(Optional)Solution2","text":"Solution2 English\u4e2d\u6587 <p>The solution</p> <p>\u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848</p>"},{"location":"fifty/1_the_sock_drawer/","title":"The Sock Drawer","text":""},{"location":"fifty/1_the_sock_drawer/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>A drawer contains red socks and black socks. When two socks are drawn at random, the probability that both are red is \\(\\frac{1}{2}\\)</p> <p>(a) How small can the number of socks in the drawer be?</p> <p>(b) How small if the number of black socks is even?</p> <p>\u4e00\u4e2a\u62bd\u5c49\u91cc\u88c5\u6709\u7ea2\u889c\u5b50\u548c\u9ed1\u889c\u5b50\u3002 \u5f53\u968f\u673a\u62bd\u53d6\u4e24\u53ea\u889c\u5b50\u65f6\uff0c\u4e24\u53ea\u889c\u5b50\u90fd\u662f\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{1}{2}\\)</p> <p>(a) \u62bd\u5c49\u91cc\u7684\u889c\u5b50\u6570\u91cf\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p> <p>(b) \u5982\u679c\u9ed1\u889c\u5b50\u7684\u6570\u91cf\u662f\u5076\u6570\uff0c\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\uff1f</p>"},{"location":"fifty/1_the_sock_drawer/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Use probability equations to solve for radicals, Pell's equation</p> <p>\u6982\u7387\u7b49\u5f0f\u7528\u4e8e\u6839\u5f0f\u6c42\u89e3\uff0cPell\u65b9\u7a0b</p>"},{"location":"fifty/1_the_sock_drawer/#solutions","title":"Solutions","text":""},{"location":"fifty/1_the_sock_drawer/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let the number of red socks be denoted as \\(R \\in \\mathbb{Z}^{+}\\), and the total number of socks be denoted as \\(N \\in \\mathbb{Z}^{+}\\), where \\(N &gt; R\\). The probability of randomly picking a red sock on the first draw is \\(\\frac{R}{N}\\), and the probability of picking another red sock after picking a red sock on the first draw is \\(\\frac{R-1}{N-1}\\). Therefore, we have:</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>Simplifying this equation, we get:</p> \\[N^2 - N + 2R(1-R) = 0\\] <p>Since our goal is to find the minimum value of \\(N\\), combining the above conditions, the original problem can be formulated as the following integer programming problem:</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>As for the canonical solution to this integer programming problem... I'm not quite familiar with it (feel free to submit a pull request to supplement it). Here, we'll use a relatively simple approach.</p> <p>Based on \\(N^2 - N + 2R(1-R) = 0\\), since our goal is to find \\(N\\), we can treat it as an unknown and use the quadratic formula to derive the corresponding values. Therefore, we have:</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>Considering the conditions that \\(N\\) and \\(R\\) are both positive integers, we can calculate:</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>And it must hold that \\(\\sqrt{1 - 8R(1-R)}\\) is an odd number, which requires \\(1 - 8R(1-R)\\) to be a perfect square.</p> <p>We can find values that satisfy these conditions through an iterative approach:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u8bb0\u7ea2\u8272\u889c\u5b50\u7684\u4e2a\u6570\u4e3a\\(R \\in \\mathbb{Z}^{+}\\)\uff0c\u889c\u5b50\u603b\u6570\u4e3a\\(N \\in \\mathbb{Z}^{+}\\), \u4e14\\(N &gt; R\\)\uff0c \u90a3\u4e48\u7b2c\u4e00\u6b21\u968f\u673a\u62ff\u5230\u7ea2\u889c\u5b50\u7684\u6982\u7387\\(\\frac{R}{N}\\)\uff0c\u5728\u7b2c\u4e00\u6b21\u62ff\u5230\u7ea2\u889c\u5b50\u540e\u7b2c\u4e8c\u6b21\u53c8\u62ff\u5230\u7ea2\u8272\u7684\u6982\u7387\u4e3a\\(\\frac{R-1}{N-1}\\)\uff0c\u7531\u6b64\u5f97</p> \\[\\frac{1}{2} = \\frac{R}{N}\\frac{R-1}{N-1}\\] <p>\u5316\u7b80\u5f97\uff0c</p> \\[N^2 - N + 2R(R-1) = 0\\] <p>\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\u7684\u6700\u5c0f\u503c\uff0c\u7efc\u5408\u4ee5\u4e0a\u6761\u4ef6\uff0c\u539f\u95ee\u9898\u53ef\u4ee5\u6574\u7406\u4e3a\u5982\u4e0b\u6574\u6570\u89c4\u5212\u95ee\u9898</p> \\[ \\begin{align*} \\text{minimize} \\quad &amp; N \\\\ \\text{subject to} \\quad &amp; R \\in \\mathbb{Z}^{+} \\\\ &amp; N \\in \\mathbb{Z}^{+} \\\\ &amp; N &gt; R \\\\ &amp; N^2 - N + 2R(1-R) = 0 \\end{align*} \\] <p>\u81f3\u4e8e\u8fd9\u4e2a\u6574\u6570\u89c4\u5212\u95ee\u9898\u7684\u89c4\u8303\u89e3\u6cd5...\u6211\u8fd8\u4e0d\u592a\u4f1a(\u6b22\u8fce\u63d0PR\u8865\u5145). \u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u76f8\u5bf9\u7b80\u5355\u7684\u89e3\u6cd5\u3002</p> <p>\u6839\u636e\\(N^2 - N + 2R(1-R) = 0\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6c42\\(N\\)\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u672a\u77e5\u6570\uff0c\u7136\u540e\u7528\u6c42\u6839\u516c\u5f0f\u6765\u63a5\u51fa\u5bf9\u5e94\u7684\u503c\uff0c\u6240\u4ee5\u6709</p> \\[N = \\frac{1 \\pm \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u6839\u636e\\(N\\), \\(R\\)\u5747\u4e3a\u6b63\u6574\u6570\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u7b97\u51fa</p> \\[N = \\frac{1 + \\sqrt{1 - 8R(1-R)}}{2}\\] <p>\u4e14\u5fc5\u987b\u6709\\(\\sqrt{1 - 8R(1-R)}\\)\u4e3a\u5947\u6570\uff0c\u8fd9\u5c31\u8981\u6c42\\(1 - 8R(1-R)\\)\u5fc5\u987b\u4e3a\u5e73\u65b9\u6570\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u7684\u65b9\u6cd5\u6765\u6c42\u51fa\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u503c:</p> <pre><code>import math\n\n\ndef is_square(n: int) -&gt; bool:\n    for i in range(n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n\ndef is_odd(n: int) -&gt; bool:\n    return n % 2 == 1\n\n\ndef find_numbers(r_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        under_sqrt = 1 - 8 * r * (1 - r)\n        if is_square(under_sqrt) and is_odd(int(math.sqrt(under_sqrt))):\n            n = int((1 + int(math.sqrt(under_sqrt))) / 2)\n            print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nfind_numbers()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u6700\u7ec8\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"fifty/1_the_sock_drawer/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The above method is to analyze the simplified problem first and then solve it. We can also make full use of the powerful computing power of the computer to directly solve this problem. Let\u2019s take a look at the \"violent aesthetics\" of computers!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>Obtaining the final answers:</p> <p>(a): At least 4 socks are needed (3 red and 1 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): At least 21 socks are needed (15 red and 6 black), in this case, we have      \\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p> <p>\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u5148\u5206\u6790\u7b80\u5316\u95ee\u9898\u4e4b\u540e\u518d\u6c42\u89e3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u5f3a\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u6765\u76f4\u63a5\u6c42\u89e3\u672c\u95ee\u9898\u3002 \u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e0b\u8ba1\u7b97\u673a\u7684\u201c\u66b4\u529b\u7f8e\u5b66\u201d\u5427!</p> <pre><code>def is_close(f1: float, f2: float) -&gt; bool:\n    return abs(f1 - f2) &lt; 1e-6\n\n\ndef simulation(r_limit: int = 50, n_limit: int = 50) -&gt; None:\n    for r in range(1, r_limit):\n        for n in range(r + 1, n_limit):\n            if is_close(1 / 2, (r / n) * ((r - 1) / (n - 1))):\n                print(f\"R = {r}, N = {n}, B = N - R = {n - r}\\n\")\n\n\nsimulation()\n</code></pre> <p>R = 3, N = 4, B = N - R = 1</p> <p>R = 15, N = 21, B = N - R = 6</p> <p>\u5f97\u5230\u76f8\u540c\u7684\u7b54\u6848:</p> <p>(a): \u6700\u5c11\u67094\u53ea\u889c\u5b50(3\u7ea21\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{3}{4}\\frac{2}{3} = \\frac{1}{2}\\)</p> <p>(b): \u6700\u5c11\u670921\u53ea\u889c\u5b50(15\u7ea26\u9ed1)\uff0c\u6b64\u65f6\u6709\\(\\frac{R}{N}\\frac{R-1}{N-1} = \\frac{15}{21}\\frac{14}{20} = \\frac{1}{2}\\)</p>"},{"location":"fifty/2_successive_wins/","title":"Successive Wins","text":""},{"location":"fifty/2_successive_wins/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>To encourage Elmer's promising tennis career, his father offers him a prize if he wins (at least) two tennis sets in a row in a three-set series to be played with his father and the club champion alternately: father-champion- father or champion-father-champion, according to Elmer's choice. The champion is a better player than Elmer's father. Which series should Elmer choose?</p> <p>\u4e3a\u4e86\u9f13\u52b1Elmer\u6709\u524d\u9014\u7684\u7f51\u7403\u751f\u6daf\uff0c\u5982\u679c\u4ed6\u5728\u4e09\u76d8\u7cfb\u5217\u8d5b\u4e2d\u8fde\u7eed\u8d62\u5f97\uff08\u81f3\u5c11\uff09\u4e24\u76d8\u7f51\u7403\uff0c \u4ed6\u7684\u7236\u4eb2\u5c31\u4f1a\u5411\u4ed6\u63d0\u4f9b\u5956\u52b1\u3002\u6bd4\u8d5b\u5f62\u5f0f\u662f\u4e0e\u4ed6\u7684\u7236\u4eb2\u548c\u4ff1\u4e50\u90e8\u51a0\u519b\u8fdb\u884c\u4ea4\u66ff\u6bd4\u8d5b\uff0c Elmer\u53ef\u4ee5\u9009\u62e9\u4ee5\u4e0b\u4e24\u79cd\u6bd4\u8d5b\u987a\u5e8f\u4e2d\u7684\u4e00\u79cd\uff1a&lt;\u7236\u4eb2-\u51a0\u519b-\u7236\u4eb2&gt;\u6216&lt;\u51a0\u519b-\u7236\u4eb2-\u51a0\u519b&gt;\u3002 \u51a0\u519b\u662f\u6bd4Elmer\u7684\u7236\u4eb2\u66f4\u597d\u7684\u7403\u5458\u3002Elmer\u5e94\u8be5\u9009\u62e9\u54ea\u4e2a\u6bd4\u8d5b\u987a\u5e8f\uff1f</p>"},{"location":"fifty/2_successive_wins/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Pay attention to the conditions for winning two games in a row consecutively</p> <p>\u6ce8\u610f\u8fd9\u91cc\u8fde\u7eed\u8d62\u4e24\u573a\u7684\u6761\u4ef6</p>"},{"location":"fifty/2_successive_wins/#solutions","title":"Solutions","text":""},{"location":"fifty/2_successive_wins/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let's denote the father as F, the champion as C, and the probabilities of Elmer winning against the father and the champion as \\(f\\) and \\(c\\), respectively. Since the champion is stronger, we have \\(f &gt; c\\). If we consider the sequence FCF, Elmer can win the reward in the following three cases:</p> F C F Probability \u2705 \u2705 \u2705 \\(fcf\\) \u2705 \u2705 \u274c \\(fc(1-f)\\) \u274c \u2705 \u2705 \\((1-f)cf\\) <p>The probability of Elmer winning the reward in this case is:</p> \\[fcf + fc(1-f) + (1-f)cf = fc(2-f)\\] <p>Similarly, if we consider the sequence CFC, Elmer can win the reward in the following three cases:</p> C F C Probability \u2705 \u2705 \u2705 \\(cfc\\) \u2705 \u2705 \u274c \\(cf(1-c)\\) \u274c \u2705 \u2705 \\((1-c)fc\\) <p>The probability of Elmer winning the reward in this case is:</p> \\[cfc + cf(1-c) + (1-c)fc = fc(2-c)\\] <p>Since</p> \\[f &gt; c\\] <p>we have</p> \\[P(FCF) = fc(2-f) &lt; fc(2-c) = P(CFC)\\] <p>Therefore, Elmer has a higher probability of winning the reward if he chooses the sequence CFC.</p> <p>\u8fd9\u91cc\u8bb0\u7236\u4eb2\u4e3aF\uff0c\u51a0\u519b\u4e3aC\uff0cElmer\u548c\u7236\u4eb2\u548c\u51a0\u519b\u6bd4\u8d5b\u83b7\u80dc\u7684\u6982\u7387\u5206\u522b\u662f \\(f\\), \\(c\\)\u3002\u56e0\u4e3a\u51a0\u519b\u5b9e\u529b\u66f4\u5f3a\uff0c\u6240\u4ee5\u6709\\(f &gt; c\\)\u3002 \u5982\u679c\u9009\u62e9FCF\u7684\u987a\u5e8f\uff0c\u90a3\u4e48Elmer\u8d62\u5f97\u5956\u52b1\u7684\u60c5\u51b5\u6709\u5982\u4e0b\u4e09\u79cd:</p> F C F Probability \u2705 \u2705 \u2705 \\(fcf\\) \u2705 \u2705 \u274c \\(fc(1-f)\\) \u274c \u2705 \u2705 \\((1-f)cf\\) <p>\u5f97\u5230\u6b64\u65f6Elmer\u8d62\u5f97\u5956\u52b1\u7684\u6982\u7387\u4e3a:</p> \\[fcf + fc(1-f) + (1-f)cf = fc(2-f)\\] <p>\u540c\u7406\uff0c\u5982\u679c\u9009\u62e9CFC\u7684\u987a\u5e8f\uff0c\u90a3\u4e48Elmer\u8d62\u5f97\u5956\u52b1\u7684\u60c5\u51b5\u6709\u5982\u4e0b\u4e09\u79cd:</p> C F C Probability \u2705 \u2705 \u2705 \\(cfc\\) \u2705 \u2705 \u274c \\(cf(1-c)\\) \u274c \u2705 \u2705 \\((1-c)fc\\) <p>\u5f97\u5230\u6b64\u65f6Elmer\u8d62\u5f97\u5956\u52b1\u7684\u6982\u7387\u4e3a:</p> \\[ cfc + cf(1-c) + (1-c)fc = fc(2-c) \\] <p>\u56e0\u4e3a</p> \\[f &gt; c\\] <p>\u6240\u4ee5</p> \\[P(FCF) = fc(2-f) &lt; fc(2-c) = P(CFC)\\] <p>\u5373Elmer\u9009\u62e9CFC\u7684\u987a\u5e8f\u6bd4\u8d5b\u8d62\u5f97\u5956\u52b1\u7684\u6982\u7387\u66f4\u9ad8</p>"},{"location":"fifty/2_successive_wins/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>We can simulate the CFC and FCF sequences using the following approach:</p> <pre><code>import random\n\nfrom typing import Literal, Tuple\n\n\ndef get_prior_prob() -&gt; Tuple[float, float]:\n    f = random.randint(6, 8) / 10\n    c = random.randint(3, 5) / 10\n    return f, c\n\n\ndef play(win_prob: float) -&gt; bool:\n    r = random.random()\n    if r &lt; win_prob:\n        return True\n    else:\n        return False\n\n\ndef play_simulation(\n    f: float, c: float, mode: Literal[\"FCF\", \"CFC\"], run_num: int = 10000\n) -&gt; float:\n    win_count = 0\n    for _ in range(run_num):\n        if mode == \"FCF\":\n            s1, s2, s3 = play(f), play(c), play(f)\n        else:\n            s1, s2, s3 = play(c), play(f), play(c)\n        if all([s1, s2]) or all([s2, s3]):\n            win_count += 1\n    win_prob = win_count / run_num\n    return win_prob\n\n\ndef simulation(run_num: int = 10000) -&gt; None:\n    f, c = get_prior_prob()\n    fcf_win_prob = play_simulation(f, c, mode=\"FCF\", run_num=run_num)\n    cfc_win_prob = play_simulation(f, c, mode=\"CFC\", run_num=run_num)\n    print(f\"FCF: {fcf_win_prob}, CFC: {cfc_win_prob}\")\n\n\nsimulation()\n</code></pre> <p>FCF: 0.361, CFC: 0.4395</p> <p>Since the probabilities <code>f</code> and <code>c</code> for winning against the father and the champion are randomly generated using <code>get_prior_prob</code>, the results may vary for each simulation. However, we can observe that the probability for the CFC sequence is slightly higher.</p> <p>If we carefully analyze this simulation experiment, we can identify a limitation: it only simulates one pair of <code>f</code> and <code>c</code> probabilities. Therefore, the higher probability for CFC compared to FCF might be due to chance. To validate if CFC consistently has a higher probability than FCF, we need to simulate different configurations of <code>f</code> and <code>c</code>.</p> <pre><code>def simulation_extend(run_num: int = 10000) -&gt; None:\n    count = 0\n    for _ in range(100):\n        f, c = get_prior_prob()\n        fcf_win_prob = play_simulation(f, c, mode=\"FCF\", run_num=run_num)\n        cfc_win_prob = play_simulation(f, c, mode=\"CFC\", run_num=run_num)\n        if cfc_win_prob &gt; fcf_win_prob:\n            count += 1\n    print(f\"(CFC win prob &gt; FCF win prob)'s prob: {count / 100}\")\n\n\nsimulation_extend()\n</code></pre> <p>(CFC win prob &gt; FCF win prob)'s prob: 1.0</p> <p>Hence, we have sufficient data to conclude that the probability of CFC being greater than FCF is consistent.</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884cCFC\uff0cFCF\u4e24\u4e2a\u6a21\u5f0f\u7684\u6bd4\u8d5b\u6a21\u62df:</p> <pre><code>import random\n\nfrom typing import Literal, Tuple\n\n\ndef get_prior_prob() -&gt; Tuple[float, float]:\n    f = random.randint(6, 8) / 10\n    c = random.randint(3, 5) / 10\n    return f, c\n\n\ndef play(win_prob: float) -&gt; bool:\n    r = random.random()\n    if r &lt; win_prob:\n        return True\n    else:\n        return False\n\n\ndef play_simulation(\n    f: float, c: float, mode: Literal[\"FCF\", \"CFC\"], run_num: int = 10000\n) -&gt; float:\n    win_count = 0\n    for _ in range(run_num):\n        if mode == \"FCF\":\n            s1, s2, s3 = play(f), play(c), play(f)\n        else:\n            s1, s2, s3 = play(c), play(f), play(c)\n        if all([s1, s2]) or all([s2, s3]):\n            win_count += 1\n    win_prob = win_count / run_num\n    return win_prob\n\n\ndef simulation(run_num: int = 10000) -&gt; None:\n    f, c = get_prior_prob()\n    fcf_win_prob = play_simulation(f, c, mode=\"FCF\", run_num=run_num)\n    cfc_win_prob = play_simulation(f, c, mode=\"CFC\", run_num=run_num)\n    print(f\"FCF: {fcf_win_prob}, CFC: {cfc_win_prob}\")\n\n\nsimulation()\n</code></pre> <p>FCF: 0.2714, CFC: 0.3459</p> <p>\u56e0\u4e3a\u8fd9\u91cc\u8d62\u5f97\u7236\u4eb2\u548c\u51a0\u519b\u7684\u6982\u7387<code>f</code>, <code>c</code>\u662f\u901a\u8fc7<code>get_prior_prob</code>\u968f\u673a\u751f\u6210\uff0c \u6240\u4ee5\u6bcf\u6b21\u6a21\u62df\u7684\u7ed3\u679c\u4f1a\u4e0d\u76f8\u540c\u3002\u4f46\u662f\u90fd\u80fd\u591f\u770b\u5230CFC\u987a\u5e8f\u7684\u6982\u7387\u66f4\u9ad8\u4e00\u4e9b.</p> <p>\u5982\u679c\u6211\u4eec\u4ed4\u7ec6\u601d\u8003\u8fd9\u4e2a\u6a21\u62df\u5b9e\u9a8c\u5c31\u4f1a\u53d1\u73b0\u5176\u4e2d\u8fd8\u6709\u4e0d\u8db3\u7684\u5730\u65b9\uff0c\u90a3\u5c31\u662f\u8fd9\u91cc\u53ea\u6a21\u62df\u4e86\u4e00\u5bf9 <code>f</code>, <code>c</code>\u6982\u7387\u4e0b\u7684\u60c5\u51b5\u3002\u90a3\u4e48\u8fd9\u91cc\u6a21\u62df\u5f97\u5230\u7684CFC\u7684\u6982\u7387\u5927\u4e8eFCF\u7684\u6982\u7387\u4e0d\u6392\u9664\u662f\u5076\u7136\u7684\u539f\u56e0\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u6a21\u62df\u5728\u4e0d\u540c<code>f</code>, <code>c</code>\u914d\u7f6e\u4e0b\u662f\u5426\u90fd\u6709CFC\u7684\u6982\u7387\u5927\u4e8eFCF\u7684\u6982\u7387\u3002</p> <pre><code>def simulation_extend(run_num: int = 10000) -&gt; None:\n    count = 0\n    for _ in range(100):\n        f, c = get_prior_prob()\n        fcf_win_prob = play_simulation(f, c, mode=\"FCF\", run_num=run_num)\n        cfc_win_prob = play_simulation(f, c, mode=\"CFC\", run_num=run_num)\n        if cfc_win_prob &gt; fcf_win_prob:\n            count += 1\n    print(f\"(CFC win prob &gt; FCF win prob)'s prob: {count / 100}\")\n\n\nsimulation_extend()\n</code></pre> <p>(CFC win prob &gt; FCF win prob)'s prob: 1.0</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u6709\u5145\u8db3\u7684\u6570\u636e\u8bf4\u660eCFC\u7684\u6982\u7387\u5927\u4e8eFCF\u7684\u6982\u7387\u3002</p>"},{"location":"fifty/3_flippant_jury/","title":"The Flippant Juror","text":""},{"location":"fifty/3_flippant_jury/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>A three-man jury has two members each of whom independently has probability \\(p\\) of making the correct decision and a third member who flips a coin for each decision (majority rules). A one-man jury has probability \\(p\\) of making the correct decision. Which jury has the better probability of making the correct decision?</p> <p>\u4e09\u4eba\u966a\u5ba1\u56e2\u6709\u4e24\u540d\u6210\u5458\uff0c\u6bcf\u4eba\u72ec\u7acb\u5730\u6709 \\(p\\) \u505a\u51fa\u6b63\u786e\u51b3\u5b9a\u7684\u6982\u7387\uff0c \u7b2c\u4e09\u540d\u6210\u5458\u5219\u4e3a\u6bcf\u4e2a\u51b3\u5b9a\u63b7\u786c\u5e01\uff08\u591a\u6570\u89c4\u5219\uff09\u3002 \u4e00\u4eba\u966a\u5ba1\u56e2\u505a\u51fa\u6b63\u786e\u51b3\u5b9a\u7684\u6982\u7387\u4e3a \\(p\\)\u3002 \u54ea\u4e2a\u966a\u5ba1\u56e2\u505a\u51fa\u6b63\u786e\u51b3\u5b9a\u7684\u53ef\u80fd\u6027\u66f4\u5927\uff1f</p>"},{"location":"fifty/3_flippant_jury/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Total probability formula</p> <p>\u5168\u6982\u7387\u516c\u5f0f</p>"},{"location":"fifty/3_flippant_jury/#solutions","title":"Solutions","text":""},{"location":"fifty/3_flippant_jury/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Firstly, the probability of an individual juror making the correct judgment is straightforward and is denoted as \\(p\\).</p> <p>In the case of a three-person jury, the probability can be divided into two parts based on whether the third member is randomly selected correctly. If the result of the random selection by the third member is the correct answer, according to the majority voting rule, it is sufficient for one of the first two members to make the correct judgment. In this case, the probability is:</p> \\[\\frac{1}{2}[1 - (1 - p)^2]\\] <p>If the result of the random selection by the third member is the correct answer, according to the majority voting rule, both of the first two members must make the correct judgment. In this case, the probability is:</p> \\[\\frac{1}{2} \\times p \\times p = \\frac{1}{2}p^2\\] <p>Therefore, the probability of obtaining the correct judgment in a three-person jury is:</p> \\[\\frac{1}{2}[1 - (1 - p)^2] + \\frac{1}{2}p^2 = p\\] <p>Thus, the likelihood of both juries making the correct decision is the same and equal to \\(p\\).</p> <p>\u9996\u5148\u4e00\u4eba\u966a\u5ba1\u56e2\u505a\u51fa\u6b63\u786e\u5224\u51b3\u7684\u6982\u7387\u5f88\u7b80\u5355\uff0c\u5c31\u662f\\(p\\)\u3002</p> <p>\u4e09\u4eba\u966a\u5ba1\u56e2\u65f6\uff0c\u6982\u7387\u53ef\u4ee5\u6309\u7167\u7b2c\u4e09\u540d\u6210\u5458\u662f\u5426\u968f\u673a\u9009\u4e2d\u4e86\u6b63\u786e\u7684\u5224\u51b3\u5206\u6210\u4e24\u90e8\u5206\u3002 \u5982\u679c\u7b2c\u4e09\u540d\u6210\u5458\u968f\u673a\u9009\u62e9\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7b54\u6848\uff0c\u90a3\u4e48\u6839\u636e\u591a\u6570\u6295\u7968\u89c4\u5219\uff0c \u53ea\u8981\u524d\u4e24\u540d\u6210\u5458\u4e2d\u6709\u4e00\u4eba\u505a\u51fa\u6b63\u786e\u7684\u5224\u51b3\u5373\u53ef\uff0c\u6b64\u65f6\u6982\u7387\u4e3a\uff1a</p> \\[\\frac{1}{2}[1 - (1 - p)^2]\\] <p>\u5982\u679c\u7b2c\u4e09\u540d\u6210\u5458\u968f\u673a\u9009\u62e9\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7b54\u6848\uff0c\u90a3\u4e48\u6839\u636e\u591a\u6570\u6295\u7968\u89c4\u5219\uff0c \u53ea\u8981\u524d\u4e24\u540d\u6210\u5458\u5fc5\u987b\u90fd\u505a\u51fa\u6b63\u786e\u7684\u5224\u51b3\u624d\u53ef\u4ee5\uff0c\u6b64\u65f6\u6982\u7387\u4e3a\uff1a</p> \\[\\frac{1}{2} \\times p \\times p = \\frac{1}{2}p^2\\] <p>\u7531\u6b64\u5f97\u5230\u4e09\u4eba\u966a\u5ba1\u56e2\u65f6\u5f97\u5230\u6b63\u786e\u5224\u51b3\u7684\u6982\u7387\u662f\uff1a</p> \\[\\frac{1}{2}[1 - (1 - p)^2] + \\frac{1}{2}p^2 = p\\] <p>\u6240\u4ee5\u4e24\u4e2a\u966a\u5ba1\u56e2\u505a\u51fa\u6b63\u786e\u51b3\u5b9a\u7684\u53ef\u80fd\u6027\u4e00\u6837\u5927\uff0c\u90fd\u662f\\(p\\)</p>"},{"location":"fifty/3_flippant_jury/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The probability of obtaining the correct verdict at this time can be approximated by simulating the judgment process of a three-person jury.</p> <pre><code>import random\n\n\ndef get_prob_prior() -&gt; float:\n    p = random.random()\n    return p\n\n\ndef judge(right_prob: float) -&gt; bool:\n    r = random.random()\n    if r &lt; right_prob:\n        return True\n    else:\n        return False\n\n\ndef decision(p: float) -&gt; bool:\n    decisions = [judge(p), judge(p), judge(0.5)]\n    if sum(decisions) &gt;= 2:\n        return True\n    else:\n        return False\n\n\ndef simulation(run_nums: int = 1000000) -&gt; None:\n    p = get_prob_prior()\n    right_decision_count = 0\n    for _ in range(run_nums):\n        if decision(p) is True:\n            right_decision_count += 1\n    right_decision_prob = right_decision_count / run_nums\n    print(f\"One jury got right decision probability: {p}\\n\")\n    print(f\"Three jury got right decision probability: {right_decision_prob}\\n\")\n\n\nsimulation()\n</code></pre> <p>One jury got right decision probability: 0.3876837057436179</p> <p>Three jury got right decision probability: 0.388271</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u4e09\u4eba\u966a\u5ba1\u56e2\u7684\u5224\u51b3\u8fc7\u7a0b\u6765\u8fd1\u4f3c\u5f97\u5230\u6b64\u65f6\u5f97\u5230\u6b63\u786e\u5224\u51b3\u7684\u6982\u7387\u3002</p> <pre><code>import random\n\n\ndef get_prob_prior() -&gt; float:\n    p = random.random()\n    return p\n\n\ndef judge(right_prob: float) -&gt; bool:\n    r = random.random()\n    if r &lt; right_prob:\n        return True\n    else:\n        return False\n\n\ndef decision(p: float) -&gt; bool:\n    decisions = [judge(p), judge(p), judge(0.5)]\n    if sum(decisions) &gt;= 2:\n        return True\n    else:\n        return False\n\n\ndef simulation(run_nums: int = 1000000) -&gt; None:\n    p = get_prob_prior()\n    right_decision_count = 0\n    for _ in range(run_nums):\n        if decision(p) is True:\n            right_decision_count += 1\n    right_decision_prob = right_decision_count / run_nums\n    print(f\"One jury got right decision probability: {p}\\n\")\n    print(f\"Three jury got right decision probability: {right_decision_prob}\\n\")\n\n\nsimulation()\n</code></pre> <p>One jury got right decision probability: 0.3377161885976313</p> <p>Three jury got right decision probability: 0.337256</p>"},{"location":"fifty/4_first_success/","title":"Trials until first success","text":""},{"location":"fifty/4_first_success/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>On the average, how many times must a die be thrown until one gets a 6?</p> <p>\u5e73\u5747\u9700\u8981\u63b7\u9ab0\u5b50\u591a\u5c11\u6b21\u624d\u80fd\u5f97\u5230\u4e00\u4e2a6\u70b9\uff1f</p>"},{"location":"fifty/4_first_success/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Geometric series</p> <p>\u51e0\u4f55\u7ea7\u6570</p>"},{"location":"fifty/4_first_success/#solutions","title":"Solutions","text":""},{"location":"fifty/4_first_success/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let's denote the number of tosses required as \\(T\\). We can determine the probability distribution of \\(T\\) and then calculate the expected value \\(E(T)\\) based on this distribution.</p> T Probability 1 \\(\\frac{1}{6}\\) 2 \\(\\frac{1}{6} \\cdot (\\frac{5}{6})\\) 3 \\(\\frac{1}{6} \\cdot (\\frac{5}{6})^2\\) ... ... \\(t\\) \\(\\frac{1}{6} \\cdot (\\frac{5}{6})^{t-1}\\) <p>Therefore, we have</p> \\[E(T) = \\sum_{t=1}^{\\infty}{t \\cdot \\frac{1}{6} \\cdot (\\frac{5}{6})^{t-1}}\\] <p>From</p> \\[\\frac{5}{6}E(T) = \\sum_{t=1}^{\\infty}{t \\cdot \\frac{1}{6} \\cdot (\\frac{5}{6})^{t}}\\] <p>we can deduce that</p> \\[E(T) - \\frac{5}{6}E(T) = \\frac{1}{6}E(T) = \\frac{1}{6}(1 + \\sum_{i=1}^{\\infty}{(\\frac{5}{6})^i}) = 1\\] <p>Hence,</p> \\[E(T) = 6\\] <p>\u8bb0\u95ee\u9898\u9700\u8981\u7684\u6295\u63b7\u6b21\u6570\u4e3a\\(T\\)\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\\(T\\)\u7684\u6982\u7387\u5206\u5e03\uff0c \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6b64\u6982\u7387\u5206\u5e03\u6c42\u51fa\u6700\u7ec8\u7684\\(E(T)\\)</p> T Probability 1 \\(\\frac{1}{6}\\) 2 \\(\\frac{1}{6} \\cdot (\\frac{5}{6})\\) 3 \\(\\frac{1}{6} \\cdot (\\frac{5}{6})^2\\) ... ... \\(t\\) \\(\\frac{1}{6} \\cdot (\\frac{5}{6})^{t-1}\\) <p>\u6240\u4ee5\u6709</p> \\[E(T) = \\sum_{t=1}^{\\infty}{t \\cdot \\frac{1}{6} \\cdot (\\frac{5}{6})^{t-1}}\\] <p>\u7531</p> \\[\\frac{5}{6}E(T) = \\sum_{t=1}^{\\infty}{t \\cdot \\frac{1}{6} \\cdot (\\frac{5}{6})^{t}}\\] <p>\u5f97</p> \\[E(T) - \\frac{5}{6}E(T) = \\frac{1}{6}E(T) = \\frac{1}{6}(1 + \\sum_{i=1}^{\\infty}{(\\frac{5}{6})^i}) = 1\\] \\[E(T) = 6\\]"},{"location":"fifty/4_first_success/#solution2-elegant-analysis","title":"Solution2: Elegant Analysis","text":"Solution2: Elegant Analysis English\u4e2d\u6587 <p>This extremely elegant problem-solving idea comes from the reference answers in the book.</p> <p>When the first toss is a failure, the mean number of tosses required is \\(1 + E(T)\\), and when the first toss is a success, the mean number is 1. Then</p> \\[E(T) = \\frac{5}{6} \\cdot (1 + E(T)) + \\frac{1}{6} \\cdot 1\\] \\[E(T) = 6\\] <p>\u8fd9\u4e2a\u6781\u5176\u4f18\u96c5\u7684\u89e3\u9898\u601d\u8def\u6765\u81ea\u4e66\u7684\u53c2\u8003\u7b54\u6848\u3002</p> <p>\u5f53\u7b2c\u4e00\u6b21\u6295\u63b7\u5931\u8d25\u65f6\uff0c\u6240\u9700\u7684\u5e73\u5747\u6295\u63b7\u6b21\u6570\u4e3a\\(1 + E(T)\\)\uff1b \u5f53\u7b2c\u4e00\u6b21\u6295\u63b7\u6210\u529f\u65f6\uff0c\u6240\u9700\u7684\u5e73\u5747\u6295\u63b7\u6b21\u6570\u4e3a1\u3002\u56e0\u6b64\uff0c</p> \\[E(T) = \\frac{5}{6} \\cdot (1 + E(T)) + \\frac{1}{6} \\cdot 1\\] \\[E(T) = 6\\]"},{"location":"fifty/4_first_success/#solution3-simulation","title":"Solution3: Simulation","text":"Solution3: Simulation English\u4e2d\u6587 <p>We can approximate the average number of times it takes to roll a dice to get a 6 by simulating the process of rolling a dice.</p> <pre><code>import random\n\n\ndef roll() -&gt; int:\n    return random.randint(1, 6)\n\n\ndef roll_6_count() -&gt; int:\n    count = 1\n    r = roll()\n    while r != 6:\n        r = roll()\n        count += 1\n    return count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    roll_counts = [roll_6_count() for _ in range(run_nums)]\n    print(f\"Expectation times to got a 6: {sum(roll_counts) / run_nums}\")\n\n\nsimulation()\n</code></pre> <p>Expectation times to got a 6: 5.99347</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u63b7\u9ab0\u5b50\u7684\u8fc7\u7a0b\u6765\u8fd1\u4f3c\u5f97\u5230\u5e73\u5747\u9700\u8981\u63b7\u9ab0\u5b50\u591a\u5c11\u6b21\u624d\u80fd\u5f97\u5230\u4e00\u4e2a6\u70b9\u3002</p> <pre><code>import random\n\n\ndef roll() -&gt; int:\n    return random.randint(1, 6)\n\n\ndef roll_6_count() -&gt; int:\n    count = 1\n    r = roll()\n    while r != 6:\n        r = roll()\n        count += 1\n    return count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    roll_counts = [roll_6_count() for _ in range(run_nums)]\n    print(f\"Expectation times to got a 6: {sum(roll_counts) / run_nums}\")\n\n\nsimulation()\n</code></pre> <p>Expectation times to got a 6: 5.98854</p>"},{"location":"fifty/5_coin_in_square/","title":"Coin in Square","text":""},{"location":"fifty/5_coin_in_square/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>In a common carnival game a player tosses a penny from a distance of about 5 feet onto the surface of a table ruled in 1-inch squares. If the penny (\\(\\frac{3}{4}\\) inch in diameter) falls entirely inside a square, the player receives 5 cents but does not get his penny back; otherwise he loses his penny. If the penny lands on the table, what is his chance to win?</p> <p>\u5728\u4e00\u4e2a\u5e38\u89c1\u7684\u5609\u5e74\u534e\u6e38\u620f\u4e2d\uff0c\u73a9\u5bb6\u4ece\u5927\u7ea65\u82f1\u5c3a\u7684\u8ddd\u79bb\u4e0a\u5c06\u4e00\u679a\u4e00\u7f8e\u5206\u786c\u5e01\u6295\u63b7\u5230\u4e00\u4e2a\u5212\u5206\u4e3a1\u82f1\u5bf8\u65b9\u683c\u7684\u684c\u9762\u4e0a\u3002 \u5982\u679c\u786c\u5e01\uff08\u76f4\u5f84\u4e3a\\(\\frac{3}{4}\\)\u82f1\u5bf8\uff09\u5b8c\u5168\u843d\u5728\u4e00\u4e2a\u65b9\u683c\u5185\uff0c\u73a9\u5bb6\u5c06\u83b7\u5f975\u7f8e\u5206\uff0c \u4f46\u4e0d\u4f1a\u62ff\u56de\u4ed6\u7684\u786c\u5e01\uff1b\u5426\u5219\uff0c\u4ed6\u5c06\u5931\u53bb\u4ed6\u7684\u786c\u5e01\u3002\u5982\u679c\u786c\u5e01\u843d\u5728\u684c\u5b50\u4e0a\uff0c\u4ed6\u83b7\u80dc\u7684\u673a\u4f1a\u6709\u591a\u5927\uff1f</p>"},{"location":"fifty/5_coin_in_square/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Consider the point where the center of the coin\u2019s circle falls</p> <p>\u8003\u8651\u786c\u5e01\u5706\u5fc3\u7684\u843d\u70b9</p>"},{"location":"fifty/5_coin_in_square/#solutions","title":"Solutions","text":""},{"location":"fifty/5_coin_in_square/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>The key to solving this problem lies in recognizing that the crucial factor is the position of the coin's center within the square.</p> <p>Since the square has a length and width of 1 inch, and the coin has a diameter of \\(\\frac{3}{4}\\) inch, when the center of the coin is at the center of the square, the coin completely falls within the square. Additionally, there are some gaps between the coin and the edges of the square in all directions.</p> <p>To determine the winning probability, we consider the region where the center of the coin moves up, down, left, and right from the center until it touches one of the boundaries of the square. The area covered by the center during this movement represents all the valid positions for the center.</p> <p>The calculation of this area is straightforward. Based on the symmetry between the circle and the square, the region is determined by four points adjacent to the square's vertices. Each of these points is at a vertical distance of the coin's radius, which is \\(\\frac{3}{8}\\) inch. Therefore, the area of the region within these four points, which corresponds to the winning region, is:</p> \\[(1 - \\frac{3}{8} - \\frac{3}{8})^2 = (\\frac{1}{4})^2 = \\frac{1}{16}\\] <p>\u8fd9\u91cc\u89e3\u9898\u7684\u5173\u952e\u5728\u4e8e\u8bc6\u522b\u5230\u6838\u5fc3\u5728\u4e8e\u786c\u5e01\u5706\u5fc3\u5728\u65b9\u683c\u5185\u7684\u843d\u70b9\u3002</p> <p>\u56e0\u4e3a\u65b9\u683c\u957f\u5bbd\u5747\u4e3a1\u82f1\u5bf8\uff0c\u786c\u5e01\u76f4\u5f84\u4e3a\\(\\frac{3}{4}\\)\u82f1\u5bf8\uff0c \u6240\u4ee5\u5f53\u786c\u5e01\u5706\u5fc3\u5728\u65b9\u683c\u4e2d\u5fc3\u65f6\uff0c\u786c\u5e01\u5c31\u662f\u6574\u4e2a\u90fd\u843d\u5165\u65b9\u683c\u3002 \u6b64\u5916\u786c\u5e01\u548c\u65b9\u683c\u7684\u4e0a\u4e0b\u5de6\u53f3\u4e4b\u95f4\u90fd\u8fd8\u6709\u4e00\u4e9b\u7f1d\u9699\uff0c \u6b64\u65f6\u5c06\u786c\u5e01\u4ee5\u6b64\u4e3a\u4e2d\u5fc3\u5411\u4e0a\u4e0b\u5de6\u53f3\u6d3b\u52a8\uff0c\u76f4\u5230\u67d0\u4e00\u4e2a\u8fb9\u754c\u548c\u65b9\u683c\u76f8\u5207\uff0c\u8fd9\u671f\u95f4 \u5706\u5fc3\u6ed1\u8fc7\u7684\u533a\u57df\u5c31\u662f\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5706\u5fc3\u7684\u4f4d\u7f6e\u3002 \u8fd9\u4e2a\u533a\u57df\u7684\u9762\u79ef\u9664\u4ee5\u65b9\u683c\u7684\u9762\u79ef\u5c31\u662f\u83b7\u80dc\u7684\u6982\u7387\u3002</p> <p>\u5177\u4f53\u5b9a\u4f4d\u8fd9\u4e2a\u5706\u5fc3\u533a\u57df\u7684\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff0c\u6839\u636e\u5706\u548c\u6b63\u65b9\u5f62\u7684\u5bf9\u79f0\u6027\uff0c\u8fd9\u91cc\u7684\u533a\u57df\u7531 \u4e34\u8fd1\u65b9\u683c\u9876\u70b9\u7684\u56db\u4e2a\u70b9\u51b3\u5b9a\uff0c\u6bcf\u4e2a\u70b9\u79bb\u6700\u8fd1\u65b9\u683c\u8fb9\u7684\u5782\u76f4\u8ddd\u79bb\u5747\u4e3a\u786c\u5e01\u7684\u534a\u5f84\uff0c \u5373\\(\\frac{3}{8}\\)\u82f1\u5c3a\u3002\u6240\u4ee5\u5f97\u5230\u56db\u4e2a\u70b9\u5185\u533a\u57df\u5373\u83b7\u80dc\u533a\u57df\u7684\u9762\u79ef\u4e3a</p> \\[(1 - \\frac{3}{8} - \\frac{3}{8})^ 2 = (\\frac{1}{4})^2 = \\frac{1}{16}\\]"},{"location":"fifty/5_coin_in_square/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The probability of winning can be approximated by simulating the throwing process</p> <pre><code>import random\n\nfrom io import StringIO\nfrom typing import Dict, List, Tuple\n\nimport matplotlib.colors as colors\nimport matplotlib.pyplot as plt\n\n\ndef toss() -&gt; Tuple[float, float]:\n    \"\"\"\n    A toss action\n    :return: the position of the coin center\n    \"\"\"\n    x, y = random.random(), random.random()\n    return x, y\n\n\ndef is_win(x: float, y: float) -&gt; bool:\n    \"\"\"\n    Judge the position is in the win-area or not\n    :param x: the x-axis position\n    :param y: the y-axis position\n    :return: win or not\n    \"\"\"\n    if (3 / 8 &lt; x &lt; 5 / 8) and (3 / 8 &lt; y &lt; 5 / 8):\n        return True\n    return False\n\n\ndef simulation(\n    run_nums: int = 1000000,\n    verbose: bool = True,\n) -&gt; Dict[str, List]:\n    positions: Dict[str, List] = {\"xs\": [], \"ys\": [], \"win\": []}\n    win_count = 0\n    for _ in range(run_nums):\n        x, y = toss()\n        positions[\"xs\"].append(x)\n        positions[\"ys\"].append(y)\n        win = is_win(x, y)\n        if win:\n            win_count += 1\n            positions[\"win\"].append(1)\n        else:\n            positions[\"win\"].append(0)\n\n    win_prob = win_count / run_nums\n    if verbose:\n        print(f\"Win probability: {win_prob}\\n\")\n        print(f\"1/16 in float: {1 / 16}\\n\")\n    return positions\n\n\nsimulation()\n</code></pre> <p>Win probability: 0.06248</p> <p>1/16 in float: 0.0625</p> <p>We can also visualize simulation experiments to get an intuitive feeling</p> ResultSource <p> 2024-10-14T12:07:33.360842 image/svg+xml Matplotlib v3.9.2, https://matplotlib.org/ </p> simulation plot<pre><code>def plot_simulation():\n    fig, ax = plt.subplots()\n\n    positions = simulation(10000, verbose=False)\n\n    cmap = colors.ListedColormap([\"pink\", \"lightgreen\"])\n    bounds = [0, 0.5, 1]\n    norm = colors.BoundaryNorm(bounds, cmap.N)\n\n    # Create the plot\n    ax.scatter(\n        positions[\"xs\"], positions[\"ys\"], s=1, c=positions[\"win\"], cmap=cmap, norm=norm\n    )\n    # Set labels and title\n    ax.set_xlabel(\"X\")\n    ax.set_ylabel(\"Y\")\n    ax.set_title(\"Simulation\")\n    ax.grid(True)\n    fig.tight_layout()\n\n    buffer = StringIO()\n    plt.savefig(buffer, format=\"svg\")\n    print(buffer.getvalue())\n\n\nplot_simulation()\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u6295\u63b7\u7684\u8fc7\u7a0b\u6765\u8fd1\u4f3c\u6c42\u89e3\u83b7\u80dc\u7684\u6982\u7387</p> <pre><code>import random\n\nfrom io import StringIO\nfrom typing import Dict, List, Tuple\n\nimport matplotlib.colors as colors\nimport matplotlib.pyplot as plt\n\n\ndef toss() -&gt; Tuple[float, float]:\n    \"\"\"\n    A toss action\n    :return: the position of the coin center\n    \"\"\"\n    x, y = random.random(), random.random()\n    return x, y\n\n\ndef is_win(x: float, y: float) -&gt; bool:\n    \"\"\"\n    Judge the position is in the win-area or not\n    :param x: the x-axis position\n    :param y: the y-axis position\n    :return: win or not\n    \"\"\"\n    if (3 / 8 &lt; x &lt; 5 / 8) and (3 / 8 &lt; y &lt; 5 / 8):\n        return True\n    return False\n\n\ndef simulation(\n    run_nums: int = 1000000,\n    verbose: bool = True,\n) -&gt; Dict[str, List]:\n    positions: Dict[str, List] = {\"xs\": [], \"ys\": [], \"win\": []}\n    win_count = 0\n    for _ in range(run_nums):\n        x, y = toss()\n        positions[\"xs\"].append(x)\n        positions[\"ys\"].append(y)\n        win = is_win(x, y)\n        if win:\n            win_count += 1\n            positions[\"win\"].append(1)\n        else:\n            positions[\"win\"].append(0)\n\n    win_prob = win_count / run_nums\n    if verbose:\n        print(f\"Win probability: {win_prob}\\n\")\n        print(f\"1/16 in float: {1 / 16}\\n\")\n    return positions\n\n\nsimulation()\n</code></pre> <p>Win probability: 0.062685</p> <p>1/16 in float: 0.0625</p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6a21\u62df\u5b9e\u9a8c\u53ef\u89c6\u5316\u6765\u83b7\u53d6\u76f4\u89c2\u7684\u611f\u53d7 ResultSource <p> 2024-10-14T12:07:34.443012 image/svg+xml Matplotlib v3.9.2, https://matplotlib.org/ </p> simulation plot<pre><code>def plot_simulation():\n    fig, ax = plt.subplots()\n\n    positions = simulation(10000, verbose=False)\n\n    cmap = colors.ListedColormap([\"pink\", \"lightgreen\"])\n    bounds = [0, 0.5, 1]\n    norm = colors.BoundaryNorm(bounds, cmap.N)\n\n    # Create the plot\n    ax.scatter(\n        positions[\"xs\"], positions[\"ys\"], s=1, c=positions[\"win\"], cmap=cmap, norm=norm\n    )\n    # Set labels and title\n    ax.set_xlabel(\"X\")\n    ax.set_ylabel(\"Y\")\n    ax.set_title(\"Simulation\")\n    ax.grid(True)\n    fig.tight_layout()\n\n    buffer = StringIO()\n    plt.savefig(buffer, format=\"svg\")\n    print(buffer.getvalue())\n\n\nplot_simulation()\n</code></pre> </p>"},{"location":"fifty/6_chuck_a_luck/","title":"Chuck-a-Luck","text":""},{"location":"fifty/6_chuck_a_luck/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>Chuck-a-Luck is a gambling game often played at carnivals and gambling houses. A player may bet on anyone of the numbers 1,2,3,4,5,6. Three dice are rolled. If the player's number appears on one, two, or three of the dice, he receives respectively one, two, or three times his original stake plus his own money back; otherwise he loses his stake. What is the player's expected loss per unit stake? (Actually the player may distribute stakes on several numbers, but each such stake can be regarded as a separate bet.)</p> <p>Chuck-a-Luck\u662f\u4e00\u79cd\u5e38\u5728\u5609\u5e74\u534e\u548c\u8d4c\u573a\u4e2d\u73a9\u7684\u8d4c\u535a\u6e38\u620f\u3002 \u73a9\u5bb6\u53ef\u4ee5\u62bc\u6ce81\u30012\u30013\u30014\u30015\u62166\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\u3002\u4e09\u4e2a\u9ab0\u5b50\u88ab\u6295\u63b7\uff0c\u5982\u679c\u73a9\u5bb6\u62bc\u6ce8\u7684\u6570\u5b57\u51fa\u73b0\u5728\u4e00\u4e2a\u3001\u4e24\u4e2a\u6216\u4e09\u4e2a\u9ab0\u5b50\u4e2d\uff0c \u4ed6\u5c06\u5206\u522b\u83b7\u5f97\u5176\u539f\u59cb\u8d4c\u6ce8\u7684\u4e00\u500d\u3001\u4e24\u500d\u6216\u4e09\u500d\u4ee5\u53ca\u81ea\u5df1\u7684\u672c\u91d1\uff1b\u5426\u5219\u4ed6\u5c06\u8f93\u6389\u4ed6\u7684\u8d4c\u6ce8\u3002 \u73a9\u5bb6\u6bcf\u6295\u6ce8\u4e00\u5355\u4f4d\uff0c\u4ed6\u7684\u9884\u671f\u635f\u5931\u662f\u591a\u5c11\uff1f\uff08\u5b9e\u9645\u4e0a\uff0c\u73a9\u5bb6\u53ef\u4ee5\u5728\u51e0\u4e2a\u6570\u5b57\u4e0a\u5206\u914d\u8d4c\u6ce8\uff0c\u4f46\u6bcf\u4e2a\u8d4c\u6ce8\u53ef\u4ee5\u89c6\u4e3a\u4e00\u6b21\u5355\u72ec\u7684\u62bc\u6ce8\u3002\uff09</p>"},{"location":"fifty/6_chuck_a_luck/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Since we are looking for expectations, we need to first define the random variable, then find out the probability of its distribution, and finally find the expectations.</p> <p>\u65e2\u7136\u662f\u6c42\u671f\u671b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\uff0c\u7136\u540e\u627e\u51fa\u5176\u5206\u5e03\u7684\u6982\u7387\uff0c\u6700\u540e\u6c42\u671f\u671b\u5373\u53ef\u3002</p>"},{"location":"fifty/6_chuck_a_luck/#solutions","title":"Solutions","text":""},{"location":"fifty/6_chuck_a_luck/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>Let \\(R\\) be the player's reward and \\(S\\) be the original stake. Then the player's expected reward is \\(E(R)\\), and the expected loss is \\(E(L) = -E(R)\\).</p> <p>To find \\(E(R)\\), we first list the distribution of \\(R\\) as follows:</p> \\(R\\) Probability Calculation Result 1 \\(-S\\) \\(\\left[\\frac{5}{6}\\right]^3\\) \\(\\frac{125}{216}\\) 2 \\(S\\) \\(\\frac{1}{6}\\cdot\\frac{5}{6}\\cdot\\frac{5}{6} + \\frac{5}{6}\\cdot\\frac{1}{6}\\cdot\\frac{5}{6} + \\frac{5}{6}\\cdot\\frac{5}{6}\\cdot\\frac{1}{6}\\) \\(\\frac{75}{216}\\) 3 \\(2S\\) \\(\\frac{1}{6}\\cdot\\frac{1}{6}\\cdot\\frac{5}{6} + \\frac{1}{6}\\cdot\\frac{5}{6}\\cdot\\frac{1}{6} + \\frac{5}{6}\\cdot\\frac{1}{6}\\cdot\\frac{1}{6}\\) \\(\\frac{15}{216}\\) 4 \\(3S\\) \\(\\left[\\frac{1}{6}\\right]^3\\) \\(\\frac{1}{216}\\) <p>From this, we can compute:</p> \\[ E(R) = -S\\cdot\\frac{125}{216} + S\\cdot\\frac{75}{216} + 2S\\cdot\\frac{15}{216} + 3S\\cdot\\frac{1}{216} = -\\frac{17}{216}S \\] \\[ E(L) = -E(R) = \\frac{17}{216}S \\] <p>\u8bb0\u73a9\u5bb6\u7684\u5956\u52b1\u4e3a\\(R\\)\uff0c\u539f\u59cb\u7684\u8d4c\u6ce8\u4e3a\\(S\\)\uff0c\u90a3\u4e48\u73a9\u5bb6\u7684\u9884\u671f\u5956\u52b1\u4e3a\\(E(R)\\), \u9884\u671f\u7684\u635f\u5931\u4e3a\\(E(L) = -E(R)\\). \u56e0\u4e3a\u8981\u6c42\\(E(R)\\)\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5217\u51fa\\(R\\)\u7684\u5206\u5e03\uff0c\u5982\u4e0b\uff1a</p> \\(R\\) Probability Calculation Result 1 \\(-S\\) \\(\\left[\\frac{5}{6}\\right]^3\\) \\(\\frac{125}{216}\\) 2 \\(S\\) \\(\\frac{1}{6}\\cdot\\frac{5}{6}\\cdot\\frac{5}{6} + \\frac{5}{6}\\cdot\\frac{1}{6}\\cdot\\frac{5}{6} + \\frac{5}{6}\\cdot\\frac{5}{6}\\cdot\\frac{1}{6}\\) \\(\\frac{75}{216}\\) 3 \\(2S\\) \\(\\frac{1}{6}\\cdot\\frac{1}{6}\\cdot\\frac{5}{6} + \\frac{1}{6}\\cdot\\frac{5}{6}\\cdot\\frac{1}{6} + \\frac{5}{6}\\cdot\\frac{1}{6}\\cdot\\frac{1}{6}\\) \\(\\frac{15}{216}\\) 4 \\(3S\\) \\(\\left[\\frac{1}{6}\\right]^3\\) \\(\\frac{1}{216}\\) <p>\u7531\u6b64\u8ba1\u7b97\u51fa</p> \\[     E(R) = -S\\cdot\\frac{125}{216} + S\\cdot\\frac{75}{216} + 2S\\cdot\\frac{15}{216} + 3S\\cdot\\frac{1}{216} = -\\frac{17}{216}S \\] \\[     E(L) = -E(R) = \\frac{17}{216}S \\]"},{"location":"fifty/6_chuck_a_luck/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>We can also simulate the game to find the expected loss: <pre><code>import random\n\nfrom typing import Dict, List, Tuple\n\n\ndef bet() -&gt; Tuple[float, int]:\n    \"\"\"\n    A bet action\n    :return: the bet amount(stake) and the guess number\n    \"\"\"\n    stake = 1.0\n    guess = random.randint(1, 6)\n    return stake, guess\n\n\ndef toss_three() -&gt; List[int]:\n    \"\"\"\n    A toss action\n    :return: the three dice number\n    \"\"\"\n    dices = [random.randint(1, 6) for _ in range(3)]\n    return dices\n\n\ndef calc_loss(stake: float, guess: int, dices: List[int]) -&gt; float:\n    \"\"\"\n    Calculate the loss amount\n    :param stake: the stake amount\n    :param guess: the guess number\n    :param dices: the dice numbers\n    :return: the loss amount\n    \"\"\"\n    guess_count = dices.count(guess)\n    if guess_count == 0:\n        return stake\n    else:\n        return -stake * guess_count\n\n\ndef play() -&gt; float:\n    \"\"\"\n    Play a game\n    :return: the final amount\n    \"\"\"\n    stake, guess = bet()\n    dices = toss_three()\n    loss = calc_loss(stake, guess, dices)\n    return loss\n\n\ndef simulation(run_nums: int = 1000000, verbose: bool = True) -&gt; float:\n    amounts: Dict[str, List] = {\"amounts\": []}\n    final_amount = 0.0\n    for _ in range(run_nums):\n        final_amount += play()\n        amounts[\"amounts\"].append(final_amount)\n\n    expected_amount = final_amount / run_nums\n\n    if verbose:\n        print(f\"Simulation expect loss amount: {expected_amount}\\n\")\n        print(f\"Theory expect loss amount: 17/216 = {17 / 216}\\n\")\n    return expected_amount\n\n\nsimulation()\n</code></pre> <p>Simulation expect loss amount: 0.077772</p> <p>Theory expect loss amount: 17/216 = 0.0787037037037037</p> </p> <p>\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\u6574\u4e2a\u8d4c\u535a\u8fc7\u7a0b\u6765\u83b7\u53d6\u8fd1\u4f3c\u7684\u7ed3\u679c:</p> <pre><code>import random\n\nfrom typing import Dict, List, Tuple\n\n\ndef bet() -&gt; Tuple[float, int]:\n    \"\"\"\n    A bet action\n    :return: the bet amount(stake) and the guess number\n    \"\"\"\n    stake = 1.0\n    guess = random.randint(1, 6)\n    return stake, guess\n\n\ndef toss_three() -&gt; List[int]:\n    \"\"\"\n    A toss action\n    :return: the three dice number\n    \"\"\"\n    dices = [random.randint(1, 6) for _ in range(3)]\n    return dices\n\n\ndef calc_loss(stake: float, guess: int, dices: List[int]) -&gt; float:\n    \"\"\"\n    Calculate the loss amount\n    :param stake: the stake amount\n    :param guess: the guess number\n    :param dices: the dice numbers\n    :return: the loss amount\n    \"\"\"\n    guess_count = dices.count(guess)\n    if guess_count == 0:\n        return stake\n    else:\n        return -stake * guess_count\n\n\ndef play() -&gt; float:\n    \"\"\"\n    Play a game\n    :return: the final amount\n    \"\"\"\n    stake, guess = bet()\n    dices = toss_three()\n    loss = calc_loss(stake, guess, dices)\n    return loss\n\n\ndef simulation(run_nums: int = 1000000, verbose: bool = True) -&gt; float:\n    amounts: Dict[str, List] = {\"amounts\": []}\n    final_amount = 0.0\n    for _ in range(run_nums):\n        final_amount += play()\n        amounts[\"amounts\"].append(final_amount)\n\n    expected_amount = final_amount / run_nums\n\n    if verbose:\n        print(f\"Simulation expect loss amount: {expected_amount}\\n\")\n        print(f\"Theory expect loss amount: 17/216 = {17 / 216}\\n\")\n    return expected_amount\n\n\nsimulation()\n</code></pre> <p>Simulation expect loss amount: 0.079907</p> <p>Theory expect loss amount: 17/216 = 0.0787037037037037</p>"},{"location":"fifty/7_curing_compulsive_gambler/","title":"Curing the Compulsive Gambler","text":""},{"location":"fifty/7_curing_compulsive_gambler/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>Mr. Brown always bets a dollar on the number 13 at roulette against the advice of Kind Friend To help cure Mr Brown of playing roulette, Kind Frien(f always bets Brown $20 at even money that Brown will be behind at the end of 36 plays. How is the cure working?</p> <p>(Most American roulette wheels have 38 equally likely numbers. If the player's number comes up, he is paid 35 times his stake and gets his original stake back; otherwise he loses his stake)</p> <p>\u5e03\u6717\u5148\u751f\u603b\u662f\u4e0d\u542c\u597d\u53cb\u7684\u5efa\u8bae\uff0c\u5728\u8f6e\u76d8\u8d4c\u4e2d\u62bc1\u7f8e\u5143\u572813\u53f7\u4e0a\u3002\u4e3a\u4e86\u5e2e\u52a9\u5e03\u6717\u5148\u751f\u6212\u6389\u8f6e\u76d8\u8d4c\uff0c\u597d\u53cb\u603b\u662f\u4ee51:1\u7684\u8d54\u7387\u548c\u5e03\u6717\u5148\u751f\u6253\u8d4c20\u7f8e\u5143\uff0c \u8d4c\u5e03\u6717\u5148\u751f\u572836\u6b21\u6e38\u620f\u7ed3\u675f\u540e\u4f1a\u4e8f\u94b1\u3002\u8fd9\u4e2a\u6cbb\u7597\u65b9\u6cd5\u6548\u679c\u5982\u4f55\uff1f</p> <p>\uff08\u5927\u591a\u6570\u7f8e\u56fd\u8f6e\u76d8\u8d4c\u8f6e\u670938\u4e2a\u7b49\u6982\u7387\u7684\u6570\u5b57\u3002\u5982\u679c\u73a9\u5bb6\u62bc\u4e2d\u7684\u6570\u5b57\u51fa\u73b0\uff0c\u4ed6\u5c06\u83b7\u5f9735\u500d\u4e8e\u8d4c\u6ce8\u7684\u8d54\u4ed8\uff0c\u5e76\u6536\u56de\u539f\u59cb\u8d4c\u6ce8\uff1b\u5426\u5219\uff0c\u4ed6\u5c06\u635f\u5931\u8d4c\u6ce8\uff09</p>"},{"location":"fifty/7_curing_compulsive_gambler/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>The core of the problem is to find out how Mr. Brown's expectation of winning changes after adding the bet with his friend. Since we are looking for expectation, we need to define the random variable first, then find the probability of its distribution, and finally find the expectation.</p> <p>\u95ee\u9898\u7684\u6838\u5fc3\u662f\u6c42\u52a0\u4e0a\u548c\u670b\u53cb\u7684\u8d4c\u7ea6\u4e4b\u540e\uff0c\u5e03\u6717\u5148\u751f\u8d62\u94b1\u671f\u671b\u7684\u53d8\u5316\u5982\u4f55\u3002 \u65e2\u7136\u662f\u6c42\u671f\u671b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\uff0c\u7136\u540e\u627e\u51fa\u5176\u5206\u5e03\u7684\u6982\u7387\uff0c\u6700\u540e\u6c42\u671f\u671b\u5373\u53ef\u3002</p>"},{"location":"fifty/7_curing_compulsive_gambler/#solutions","title":"Solutions","text":""},{"location":"fifty/7_curing_compulsive_gambler/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>First, let's consider the situation without betting with a friend, where Mr. Brown plays roulette 36 times on his own. Let's denote Mr. Brown's expected winnings in this case as \\(R_1\\), so his expected winnings are \\(E(R_1)\\). To calculate \\(E(R_1)\\), we first need to list the distribution of \\(R_1\\), as follows:</p> Win Times \\(R_1\\) Probability 0 \\(-36\\) \\((\\frac{37}{38})^{36}\\) 1 \\(0\\) \\(\\binom{36}{1} (\\frac{37}{38})^{35} (\\frac{1}{38})^1\\) 2 \\(36\\) \\(\\binom{36}{2} (\\frac{37}{38})^{34} (\\frac{1}{38})^2\\) ... ... ... <p>From this, we can calculate</p> \\[ E(R_1) = \\sum_{i=0}^{36}{(36(i-1)) \\cdot \\binom{36}{i} (\\frac{37}{38})^{36-i}(\\frac{1}{38})^i} \u2248 -1.8947368421052684 \\] <p>This means that without the bet with his friend, Mr. Brown would lose about $1.89 on average for every 36 games of roulette.</p> <p>Now let's consider how much Mr. Brown is expected to win when playing 36 games of roulette with the additional bet with his friend.</p> Bet Analysis <p>The bet essentially states that if Mr. Brown loses money after 36 games of roulette, he gives his friend an additional $20. Conversely, if Mr. Brown breaks even or wins money, his friend gives him $20.</p> <p>Based on the above analysis, Mr. Brown will only lose money overall if he loses all 36 games. If he wins even one game, he won't lose money, and if he wins 2 or more games, he'll make money. In other words, Mr. Brown will only have to pay his friend an extra $20 if he loses all 36 games. In all other cases, he will earn $20 from his friend.</p> <p>Let's denote Mr. Brown's expected winnings in this case as \\(R_2\\), so his expected winnings are \\(E(R_2)\\). To calculate \\(E(R_2)\\), we first need to list the distribution of \\(R_2\\), as follows:</p> Win Times \\(R_1\\) Probability 0 \\(-36 - 20\\) \\((\\frac{37}{38})^{36}\\) 1 \\(0 + 20\\) \\(\\binom{36}{1} (\\frac{37}{38})^{35} (\\frac{1}{38})^1\\) 2 \\(36 + 20\\) \\(\\binom{36}{2} (\\frac{37}{38})^{34} (\\frac{1}{38})^2\\) ... ... ... <p>From this, we can calculate</p> \\[ E(R_2) = (-36 - 20)\\cdot \\frac{37}{38})^{36} + \\sum_{i=1}^{36}{(36(i-1) + 20) \\cdot \\binom{36}{i} (\\frac{37}{38})^{36-i}(\\frac{1}{38})^i} \u2248 2.7904190810856586 \\] <p>\u9996\u5148\u8003\u8651\u4e0d\u548c\u670b\u53cb\u6253\u8d4c\u65f6\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5355\u72ec\u73a936\u6b21\u8f6e\u76d8\u8d4c\u3002 \u8bb0\u6b64\u65f6\u5e03\u6717\u5148\u751f\u8d62\u94b1\u7684\u671f\u671b\u4e3a\\(R_1\\)\uff0c\u90a3\u4e48\u5e03\u6717\u5148\u751f\u7684\u9884\u671f\u8d62\u94b1\u6570\u4e3a\\(E(R_1)\\), \u56e0\u4e3a\u8981\u6c42\\(E(R_1)\\)\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5217\u51fa\\(R_1\\)\u7684\u5206\u5e03\uff0c\u5982\u4e0b\uff1a</p> Win Times \\(R_1\\) Probability 0 \\(-36\\) \\((\\frac{37}{38})^{36}\\) 1 \\(0\\) \\(\\binom{36}{1} (\\frac{37}{38})^{35} (\\frac{1}{38})^1\\) 2 \\(36\\) \\(\\binom{36}{2} (\\frac{37}{38})^{34} (\\frac{1}{38})^2\\) ... ... ... <p>\u7531\u6b64\u8ba1\u7b97\u51fa</p> \\[ E(R_1) = \\sum_{i=0}^{36}{(36(i-1)) \\cdot \\binom{36}{i} (\\frac{37}{38})^{36-i}(\\frac{1}{38})^i} \u2248 -1.8947368421052684 \\] <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6ca1\u6709\u548c\u670b\u53cb\u7684\u8d4c\u7ea6\u4e0b\uff0c\u5e03\u6717\u5148\u751f\u5e73\u5747\u6bcf36\u5c40\u8f6e\u76d8\u8d4c\u5927\u6982\u8981\u8f93\u7ea61.89\u7f8e\u5143\u3002</p> <p>\u4e0b\u9762\u6765\u8003\u8651\u52a0\u4e0a\u548c\u670b\u53cb\u8d4c\u7ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5e03\u6717\u5148\u751f\u73a936\u5c40\u8f6e\u76d8\u8d4c\u7684\u9884\u671f\u8d62\u94b1\u6570\u662f\u591a\u5c11\u3002</p> \u8d4c\u7ea6\u5206\u6790 <p>\u8d4c\u7ea6\u5185\u5bb9\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5982\u679c\u5e03\u6717\u5148\u751f36\u5c40\u8f6e\u76d8\u8d4c\u4e4b\u540e\u662f\u8f93\u94b1\uff0c\u90a3\u4e48\u5e03\u6717\u5148\u751f\u53e6\u5916\u62ff20\u7f8e\u5143\u7ed9\u670b\u53cb\uff1b \u53cd\u4e4b\uff0c\u5982\u679c\u5e03\u6717\u5148\u751f\u4e0d\u8f93\u4e0d\u8d62\u6216\u8005\u8d62\u94b1\u4e86\uff0c\u90a3\u4e48\u670b\u53cb\u62ff20\u7f8e\u5143\u7ed9\u5230\u5e03\u6717\u5148\u751f\u3002</p> <p>\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5e03\u6717\u5148\u751f\u53ea\u670936\u5c40\u5168\u8f93\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u6700\u7ec8\u8f93\u94b1\uff0c\u53ea\u8981\u8d621\u5c40\u5c31\u80fd\u4e0d\u8f93\u94b1\uff0c\u8d622\u5c40\u6216\u4ee5\u4e0a\u5c31\u80fd\u8d62\u94b1\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5e03\u6717\u5148\u751f\u53ea\u6709\u572836\u5c40\u5168\u8f93\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u989d\u5916\u8f93\u7ed9\u670b\u53cb20\u7f8e\u5143\uff0c\u5176\u4ed6\u60c5\u51b5\u4e0b\u90fd\u4f1a\u4ece\u670b\u53cb\u90a3\u91cc\u8d5a20\u7f8e\u5143\u3002</p> <p>\u8bb0\u6b64\u65f6\u5e03\u6717\u5148\u751f\u8d62\u94b1\u7684\u671f\u671b\u4e3a\\(R_2\\)\uff0c\u90a3\u4e48\u5e03\u6717\u5148\u751f\u7684\u9884\u671f\u8d62\u94b1\u6570\u4e3a\\(E(R_2)\\), \u56e0\u4e3a\u8981\u6c42\\(E(R_2)\\)\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5217\u51fa\\(R_2\\)\u7684\u5206\u5e03, \u5982\u4e0b:</p> Win Times \\(R_1\\) Probability 0 \\(-36 - 20\\) \\((\\frac{37}{38})^{36}\\) 1 \\(0 + 20\\) \\(\\binom{36}{1} (\\frac{37}{38})^{35} (\\frac{1}{38})^1\\) 2 \\(36 + 20\\) \\(\\binom{36}{2} (\\frac{37}{38})^{34} (\\frac{1}{38})^2\\) ... ... ... <p>\u7531\u6b64\u8ba1\u7b97\u51fa</p> \\[ E(R_2) = (-36 - 20)\\cdot \\frac{37}{38})^{36} + \\sum_{i=1}^{36}{(36(i-1) + 20) \\cdot \\binom{36}{i} (\\frac{37}{38})^{36-i}(\\frac{1}{38})^i} \u2248 2.7904190810856586 \\] \u6982\u7387&amp;\u671f\u671b\u7684\u5177\u4f53\u8ba1\u7b97 (Calculation of probability &amp; expectation) <pre><code>def binomial_coefficient(n: int, k: int) -&gt; int:\n    if k &gt; n:\n        return 0\n    if k == 0 or k == n:\n        return 1\n\n    result: float = 1\n    for i in range(1, k + 1):\n        result *= (n - i + 1) / i\n\n    return int(result)\n\n\ndef calc_expectation() -&gt; float:\n    e = 0.0\n    for i in range(36 + 1):\n        e_i = (\n            (36 * (i - 1))\n            * binomial_coefficient(36, i)\n            * (37 / 38) ** (36 - i)\n            * (1 / 38) ** i\n        )\n        e += e_i\n    return e\n\n\ndef calc_expectation_with_bet() -&gt; float:\n    e = 0.0\n    for i in range(36 + 1):\n        if i == 0:\n            e_i = (\n                -56\n                * binomial_coefficient(36, i)\n                * (37 / 38) ** (36 - i)\n                * (1 / 38) ** i\n            )\n        else:\n            e_i = (\n                (20 + 36 * (i - 1))\n                * binomial_coefficient(36, i)\n                * (37 / 38) ** (36 - i)\n                * (1 / 38) ** i\n            )\n        e += e_i\n    return e\n\n\nprint(f\"Expectation: {calc_expectation()}\\n\")\nprint(f\"Expectation with bet: {calc_expectation_with_bet()}\")\n</code></pre> <p>Expectation: -1.8947368421052684</p> <p>Expectation with bet: 2.7904190810856586</p>"},{"location":"fifty/7_curing_compulsive_gambler/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The overall process of the game is relatively simple, and we can simulate it through the following code:</p> <pre><code>import random  # noqa\n\n\ndef one_round_roulette_earn() -&gt; int:\n    \"\"\"\n    We denote one round as 36 times roulette games\n    \"\"\"\n    n_times = 36\n    target_number = 13\n\n    pay = 1 * n_times\n    earn = 0\n    for i in range(n_times):\n        number = random.randint(1, 38)\n        if number == target_number:\n            earn += 1 + 35\n    return earn - pay\n\n\ndef with_earn_bet(earn: int) -&gt; int:\n    if earn &lt; 0:\n        return earn - 20\n    else:\n        return earn + 20\n\n\ndef simulation(run_nums: int = 1000000, with_bet: bool = False) -&gt; float:\n    total_earn = 0\n    for i in range(run_nums):\n        earn = one_round_roulette_earn()\n        if with_bet:\n            earn = with_earn_bet(earn)\n        total_earn += earn\n    return total_earn / run_nums\n\n\nprint(f\"Expectation: {simulation()}\\n\")\nprint(f\"Expectation with bet: {simulation(with_bet=True)}\")\n</code></pre> <p>Expectation: -1.939248</p> <p>Expectation with bet: 2.749024</p> <p>\u6e38\u620f\u7684\u8fc7\u7a0b\u603b\u4f53\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6a21\u62df:</p> <pre><code>import random  # noqa\n\n\ndef one_round_roulette_earn() -&gt; int:\n    \"\"\"\n    We denote one round as 36 times roulette games\n    \"\"\"\n    n_times = 36\n    target_number = 13\n\n    pay = 1 * n_times\n    earn = 0\n    for i in range(n_times):\n        number = random.randint(1, 38)\n        if number == target_number:\n            earn += 1 + 35\n    return earn - pay\n\n\ndef with_earn_bet(earn: int) -&gt; int:\n    if earn &lt; 0:\n        return earn - 20\n    else:\n        return earn + 20\n\n\ndef simulation(run_nums: int = 1000000, with_bet: bool = False) -&gt; float:\n    total_earn = 0\n    for i in range(run_nums):\n        earn = one_round_roulette_earn()\n        if with_bet:\n            earn = with_earn_bet(earn)\n        total_earn += earn\n    return total_earn / run_nums\n\n\nprint(f\"Expectation: {simulation()}\\n\")\nprint(f\"Expectation with bet: {simulation(with_bet=True)}\")\n</code></pre> <p>Expectation: -1.881936</p> <p>Expectation with bet: 2.783352</p>"},{"location":"fifty/8_perfect_bridge_hand/","title":"Perfect Bridge Hand","text":""},{"location":"fifty/8_perfect_bridge_hand/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>We often read of someone who has been dealt 13 spades at bridge. With a well-shuffled pack of cards, what is the chance that you are dealt a perfect hand (13 of one suit)? (Bridge is played with an ordinary pack of 52 cards, 13 in each of 4 suits, and each of 4 players is dealt 13.)</p> <p>\u6865\u724c\u662f\u7528\u4e00\u53e0\u666e\u901a\u7684 52 \u5f20\u724c\u6253\u7684\uff0c4 \u79cd\u82b1\u8272\u5404 13 \u5f20\uff0c4 \u540d\u73a9\u5bb6\u6bcf\u4eba\u53d1 13 \u5f20\u3002 \u6211\u4eec\u7ecf\u5e38\u8bfb\u5230\u6709\u4eba\u5728\u6865\u724c\u4e0a\u62ff\u5230\u4e86 13 \u5f20\u9ed1\u6843\u3002 \u4e00\u526f\u6d17\u597d\u540e\u7684\u724c\uff0c\u4f60\u62ff\u5230\u5b8c\u7f8e\u724c\uff08\u540c\u82b1\u8272 13 \u5f20\uff09\u7684\u673a\u4f1a\u6709\u591a\u5927\uff1f</p>"},{"location":"fifty/8_perfect_bridge_hand/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Enumeration: situations where a flush is drawn/all situations where a random card is drawn</p> <p>\u679a\u4e3e: \u6293\u5230\u540c\u82b1\u7684\u60c5\u51b5/\u6240\u6709\u968f\u673a\u6293\u724c\u60c5\u51b5</p>"},{"location":"fifty/8_perfect_bridge_hand/#solutions","title":"Solutions","text":""},{"location":"fifty/8_perfect_bridge_hand/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>All possible card drawing situations, where each person randomly draws 13 cards (in a completely random situation, drawing 13 cards at once and drawing one card per round for 13 rounds are equivalent):</p> \\[     \\binom{52}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13} \\] <p>We draw the same suit, and since there is no restriction on the suit, it can be any one of the 4 suits:</p> \\[ 4 \\cdot \\binom{13}{13} \\] <p>Therefore, we can calculate the probability of drawing the same suit as:</p> \\[ \\begin{align} p &amp;= \\frac{4 \\cdot \\binom{13}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13}}{\\binom{52}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13}} \\\\   &amp;= \\frac{4 \\cdot \\binom{13}{13}}{\\binom{52}{13}} = \\frac{4}{\\binom{52}{13}} = \\frac{4}{\\frac{52!}{13!39!}} \\\\   &amp;= 4 \\cdot \\frac{13!39!}{52!} = \\frac{12!39!}{51!} \\end{align} \\] <p>We can use Python to calculate the corresponding probability as:</p> <pre><code>from fractions import Fraction\nfrom math import factorial\n\n\ndef calc():\n    prob = Fraction(factorial(12) * factorial(39), factorial(51))\n    print(f\"prob = {prob} = {float(prob)}\")\n    return prob\n\n\ncalc()\n</code></pre> <p>prob = 1/158753389900 = 6.299078089796431e-12</p> <p>\u6240\u6709\u6293\u724c\u7684\u60c5\u51b5, \u6bcf\u4eba\u968f\u673a\u629313\u5f20\u724c(\u5728\u724c\u5b8c\u5168\u968f\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4eba\u4e00\u6b21\u629313\u5f20\u724c\u548c\u6bcf\u8f6e\u4e00\u5f20\uff0c\u629313\u8f6e\u662f\u4e00\u81f4\u7684):</p> \\[     \\binom{52}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13} \\] <p>\u6211\u4eec\u6293\u51fa\u540c\u82b1\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6ca1\u6709\u9650\u5236\u82b1\u8272\uff0c\u6240\u4ee5\u53ef\u4ee5\u662f4\u4e2a\u82b1\u8272\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a:</p> \\[ 4 \\cdot \\binom{13}{13} \\] <p>\u7531\u6b64\u8ba1\u7b97\u51fa\u6211\u4eec\u6293\u5230\u540c\u82b1\u7684\u6982\u7387\u4e3a</p> \\[ \\begin{align} p &amp;= \\frac{4 \\cdot \\binom{13}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13}}{\\binom{52}{13}\\binom{39}{13}\\binom{26}{13}\\binom{13}{13}} \\\\   &amp;= \\frac{4 \\cdot \\binom{13}{13}}{\\binom{52}{13}} = \\frac{4}{\\binom{52}{13}} = \\frac{4}{\\frac{52!}{13!39!}} \\\\   &amp;= 4 \\cdot \\frac{13!39!}{52!} = \\frac{12!39!}{51!} \\end{align} \\] <p>\u6211\u4eec\u53ef\u4ee5\u7528Python\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u6982\u7387\u4e3a:</p> <pre><code>from fractions import Fraction\nfrom math import factorial\n\n\ndef calc():\n    prob = Fraction(factorial(12) * factorial(39), factorial(51))\n    print(f\"prob = {prob} = {float(prob)}\")\n    return prob\n\n\ncalc()\n</code></pre> <p>prob = 1/158753389900 = 6.299078089796431e-12</p>"},{"location":"fifty/8_perfect_bridge_hand/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>We can directly simulate the card drawing process to get exactly the same result. Here we simulate the situation of drawing one card in each round: a total of 4 cards are drawn in each round, one of which is of the same suit. During simulation, we calculate the probability of each round and multiply the probabilities of each round to get the final probability.</p> <p>The simulation results are as follows:</p> <pre><code>def combination_number(n: int, m: int) -&gt; Fraction:\n    \"\"\"\n    \u7ec4\u5408\u6570\u8ba1\u7b97\n    \"\"\"\n    return Fraction(factorial(n), factorial(m) * factorial(n - m))\n\n\ndef calc_prob():\n    prob = 4\n    for i in range(13):\n        numerator = (\n            combination_number(13 - i, 1)\n            * combination_number(39 - 3 * i, 3)\n            * factorial(3)\n        )\n        denominator = combination_number(52 - 4 * i, 4) * factorial(4)\n        prob *= Fraction(numerator, denominator)\n    print(f\"prob = {prob} = {float(prob)}\")\n    return prob\n\n\ncalc_prob()\n</code></pre> <p>prob = 1/158753389900 = 6.299078089796431e-12</p> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\u6293\u724c\u8fc7\u7a0b\u6765\u5f97\u5230\u5b8c\u5168\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u6a21\u62df\u6bcf\u8f6e\u6293\u4e00\u5f20\u724c\u7684\u60c5\u51b5: \u6bcf\u8f6e\u5171\u62bd\u53d64\u5f20\u724c\uff0c\u5176\u4e2d\u4e00\u5f20\u724c\u4e3a\u540c\u4e00\u4e2a\u82b1\u8272\u3002 \u6a21\u62df\u65f6\uff0c\u6211\u4eec\u8ba1\u7b97\u6bcf\u8f6e\u7684\u6982\u7387\uff0c\u5c06\u6bcf\u8f6e\u7684\u6982\u7387\u4e58\u8d77\u6765\u5f97\u5230\u6700\u7ec8\u7684\u6982\u7387\u3002</p> <p>\u6a21\u62df\u7ed3\u679c\u5982\u4e0b:</p> <pre><code>def combination_number(n: int, m: int) -&gt; Fraction:\n    \"\"\"\n    \u7ec4\u5408\u6570\u8ba1\u7b97\n    \"\"\"\n    return Fraction(factorial(n), factorial(m) * factorial(n - m))\n\n\ndef calc_prob():\n    prob = 4\n    for i in range(13):\n        numerator = (\n            combination_number(13 - i, 1)\n            * combination_number(39 - 3 * i, 3)\n            * factorial(3)\n        )\n        denominator = combination_number(52 - 4 * i, 4) * factorial(4)\n        prob *= Fraction(numerator, denominator)\n    print(f\"prob = {prob} = {float(prob)}\")\n    return prob\n\n\ncalc_prob()\n</code></pre> <p>prob = 1/158753389900 = 6.299078089796431e-12</p>"},{"location":"fifty/9_craps/","title":"Craps","text":""},{"location":"fifty/9_craps/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>The game of craps, played with two dice, is one of America's fastest and most popular gambling games. Calculating the odds associated with it is an instructive exercise. The rules are these. Only totals for the two dice count. The player throws the dice and wins at once if the total for the first throw is 7 or 11, loses at once if it is 2, 3, or 12. Any other throw is called his \"point.\" If the first throw is a point, the player throws the dice repeatedly until he either wins by throwing his point again or loses by throwing 7. What is the player's chance to win?</p> <p>\u63b7\u9ab0\u5b50\u8d4c\u535a\u6e38\u620f\u662f\u7f8e\u56fd\u6700\u8fc5\u901f\u548c\u6700\u53d7\u6b22\u8fce\u7684\u8d4c\u535a\u6e38\u620f\u4e4b\u4e00\uff0c\u4f7f\u7528\u4e24\u9897\u9ab0\u5b50\u8fdb\u884c\u3002\u8ba1\u7b97\u76f8\u5173\u7684\u8d54\u7387\u662f\u4e00\u9879\u6709\u76ca\u7684\u7ec3\u4e60\u3002 \u89c4\u5219\u5982\u4e0b\uff1a\u53ea\u8ba1\u7b97\u4e24\u9897\u9ab0\u5b50\u7684\u603b\u548c\u3002 \u73a9\u5bb6\u63b7\u9ab0\u5b50\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u63b7\u51fa\u7684\u603b\u70b9\u6570\u4e3a7\u621611\uff0c\u5219\u7acb\u523b\u83b7\u80dc\uff1b\u5982\u679c\u662f2\u30013\u621612\uff0c\u5219\u7acb\u523b\u8f93\u6389\u3002\u5176\u4ed6\u70b9\u6570\u79f0\u4e3a\u73a9\u5bb6\u7684\u201c\u70b9\u6570\u201d\u3002 \u5982\u679c\u7b2c\u4e00\u6b21\u63b7\u51fa\u7684\u70b9\u6570\u662f\u4e00\u4e2a\u70b9\u6570\uff0c\u73a9\u5bb6\u5c06\u53cd\u590d\u63b7\u9ab0\u5b50\uff0c\u76f4\u5230\u518d\u6b21\u63b7\u51fa\u70b9\u6570\u83b7\u80dc\uff0c\u6216\u901a\u8fc7\u63b7\u51fa7\u8f93\u6389\u3002 \u73a9\u5bb6\u83b7\u80dc\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f</p>"},{"location":"fifty/9_craps/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Focus on breaking down the game into three possible outcomes on the first roll: win immediately, lose immediately, or get a point number. Then calculate the probabilities for each scenario.</p> <p>\u5c06\u6e38\u620f\u5206\u89e3\u4e3a\u7b2c\u4e00\u6b21\u63b7\u9ab0\u5b50\u7684\u4e09\u79cd\u53ef\u80fd\u7ed3\u679c\uff1a\u7acb\u5373\u83b7\u80dc\u3001\u7acb\u5373\u5931\u8d25\u6216\u5f97\u5230\u4e00\u4e2a\u70b9\u6570\u3002\u7136\u540e\u8ba1\u7b97\u6bcf\u79cd\u60c5\u51b5\u7684\u6982\u7387\u3002</p>"},{"location":"fifty/9_craps/#solutions","title":"Solutions","text":""},{"location":"fifty/9_craps/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1: Analysis English\u4e2d\u6587 <p>First, we can list all possible point totals and their corresponding probabilities:</p> 2 3 4 5 6 7 8 9 10 11 12 Probability 1/36 2/36 3/36 4/36 5/36 6/36 5/36 4/36 3/36 2/36 1/36 <p>Let's denote winning on the first roll as \\(W_1\\), losing on the first roll as \\(L_1\\), and getting a point number as \\(P_1\\).</p> <p>The probability of winning on the first roll is:</p> \\[ P(W_1) = P(7, 11) = \\frac{6}{36} + \\frac{2}{36} = \\frac{8}{36} = \\frac{2}{9} \\] <p>Similarly, the probability of losing on the first roll is:</p> \\[ P(L_1) = P(2, 3, 12) = \\frac{1}{36} + \\frac{2}{36} + \\frac{1}{36} = \\frac{4}{36} = \\frac{1}{9} \\] <p>If a point number is rolled on the first roll, it could be 4, 5, 6, 8, 9, or 10. Let's take the case of rolling a 4 as an example and calculate the probability of the player losing:</p> \\[ \\begin{align} P(L_{p4}) &amp;= P(7) + (1 - P(4) - P(7)) \\cdot P(7) + (1 - P(4) - P(7))^2 \\cdot P(7) + \\cdots \\\\           &amp;= P(7) \\cdot (1 + (1 - P(4) - P(7)) + (1 - P(4) - P(7))^2 + \\cdots) \\\\           &amp;= P(7) \\cdot \\frac{1}{1 - (1 - P(4) - P(7))} \\\\           &amp;= P(7) \\cdot \\frac{1}{P(4) + P(7)} \\\\           &amp;= \\frac{6}{36} \\cdot \\frac{1}{\\frac{3}{36} + \\frac{6}{36}} \\\\           &amp;= \\frac{6}{36} \\cdot \\frac{1}{\\frac{9}{36}} \\\\           &amp;= \\frac{2}{3} \\end{align} \\] <p>Similarly, we can calculate the probabilities of losing when the point number is 5, 6, 8, 9, or 10:</p> \\[ P(L_{p5}) = P(L_{p9}) = \\frac{3}{5} \\] \\[ P(L_{p6}) = P(L_{p8}) = \\frac{6}{11} \\] \\[ P(L_{p10}) = P(L_{p4}) = \\frac{2}{3} \\] <p>From this, we can calculate the probability of the player winning after rolling a point number on the first roll:</p> \\[ \\begin{align} P(L_p)  &amp;= P(4) \\cdot (1-P(L_{p4})) + P(5) \\cdot (1-P(L_{p5})) + P(6) \\cdot (1-P(L_{p6})) + P(8) \\cdot (1-P(L_{p8})) + P(9) \\cdot (1-P(L_{p9})) + P(10) (1-\\cdot P(L_{p10})) \\\\         &amp;= \\frac{3}{36} \\cdot (1-\\frac{2}{3}) + \\frac{4}{36} \\cdot (1-\\frac{3}{5}) + \\frac{5}{36} \\cdot (1-\\frac{6}{11}) + \\frac{5}{36} \\cdot (1-\\frac{6}{11}) + \\frac{4}{36} \\cdot (1-\\frac{3}{5}) + \\frac{3}{36} \\cdot (1-\\frac{2}{3}) \\\\         &amp;= \\frac{1}{36} + \\frac{2}{45} + \\frac{25}{396} + \\frac{25}{396} + \\frac{2}{45} + \\frac{1}{36} \\\\         &amp;= \\frac{134}{495} \\end{align} \\] <p>Therefore, the total probability of the player winning is:</p> \\[ P(W) = P(W_1) + P(W_p) = \\frac{2}{9} + \\frac{134}{495} = \\frac{244}{495} \\approx 0.49293 \\] <p>So the probability of the player winning is approximately 49.293%.</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u53ef\u80fd\u7684\u70b9\u6570\u548c\u5bf9\u5e94\u7684\u6982\u7387\uff1a</p> 2 3 4 5 6 7 8 9 10 11 12 \u6982\u7387 1/36 2/36 3/36 4/36 5/36 6/36 5/36 4/36 3/36 2/36 1/36 <p>\u6211\u4eec\u5c06\u7b2c\u4e00\u6b21\u63b7\u9ab0\u5b50\u83b7\u80dc\u7684\u60c5\u51b5\u8bb0\u4e3a \\(W_1\\)\uff0c\u8f93\u6389\u7684\u60c5\u51b5\u8bb0\u4e3a \\(L_1\\)\uff0c\u5f97\u5230\u70b9\u6570\u7684\u60c5\u51b5\u8bb0\u4e3a \\(P_1\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u9996\u6b21\u63b7\u9ab0\u5b50\u83b7\u80dc\u7684\u6982\u7387\u4e3a\uff1a</p> \\[ P(W_1) = P(7, 11) = \\frac{6}{36} + \\frac{2}{36} = \\frac{8}{36} = \\frac{2}{9} \\] <p>\u540c\u7406\uff0c\u9996\u6b21\u63b7\u9ab0\u5b50\u8f93\u6389\u7684\u6982\u7387\u4e3a\uff1a</p> \\[ P(L_1) = P(2, 3, 12) = \\frac{1}{36} + \\frac{2}{36} + \\frac{1}{36} = \\frac{4}{36} = \\frac{1}{9} \\] <p>\u5982\u679c\u9996\u6b21\u63b7\u9ab0\u5b50\u5f97\u5230\u70b9\u6570\uff0c\u90a3\u4e48\u70b9\u6570\u7684\u503c\u53ef\u80fd\u4e3a4\u30015\u30016\u30018\u30019\u300110\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002 \u6211\u4eec\u4ee5\u70b9\u6570\u4e3a4\u7684\u60c5\u51b5\u4e3a\u4f8b\uff0c\u8ba1\u7b97\u6b64\u65f6\u73a9\u5bb6\u8f93\u6389\u7684\u6982\u7387\uff1a</p> \\[ \\begin{align} P(L_{p4}) &amp;= P(7) + (1 - P(4) - P(7)) \\cdot P(7) + (1 - P(4) - P(7))^2 \\cdot P(7) + \\cdots \\\\           &amp;= P(7) \\cdot (1 + (1 - P(4) - P(7)) + (1 - P(4) - P(7))^2 + \\cdots) \\\\           &amp;= P(7) \\cdot \\frac{1}{1 - (1 - P(4) - P(7))} \\\\           &amp;= P(7) \\cdot \\frac{1}{P(4) + P(7)} \\\\           &amp;= \\frac{6}{36} \\cdot \\frac{1}{\\frac{3}{36} + \\frac{6}{36}} \\\\           &amp;= \\frac{6}{36} \\cdot \\frac{1}{\\frac{9}{36}} \\\\           &amp;= \\frac{2}{3} \\end{align} \\] <p>\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u70b9\u6570\u4e3a5\u30016\u30018\u30019\u300110\u65f6\u73a9\u5bb6\u8f93\u6389\u7684\u6982\u7387\u5206\u522b\u4e3a\uff1a</p> \\[ P(L_{p5}) = P(L_{p9}) = \\frac{3}{5} \\] \\[ P(L_{p6}) = P(L_{p8}) = \\frac{6}{11} \\] \\[ P(L_{p10}) = P(L_{p4}) = \\frac{2}{3} \\] <p>\u7531\u6b64\u5f97\u5230\u9996\u6b21\u63b7\u9ab0\u5b50\u5f97\u5230\u70b9\u6570\u4e14\u73a9\u5bb6\u8d62\u7684\u6982\u7387\u4e3a\uff1a</p> \\[ \\begin{align} P(L_p)  &amp;= P(4) \\cdot (1-P(L_{p4})) + P(5) \\cdot (1-P(L_{p5})) + P(6) \\cdot (1-P(L_{p6})) + P(8) \\cdot (1-P(L_{p8})) + P(9) \\cdot (1-P(L_{p9})) + P(10) (1-\\cdot P(L_{p10})) \\\\         &amp;= \\frac{3}{36} \\cdot (1-\\frac{2}{3}) + \\frac{4}{36} \\cdot (1-\\frac{3}{5}) + \\frac{5}{36} \\cdot (1-\\frac{6}{11}) + \\frac{5}{36} \\cdot (1-\\frac{6}{11}) + \\frac{4}{36} \\cdot (1-\\frac{3}{5}) + \\frac{3}{36} \\cdot (1-\\frac{2}{3}) \\\\         &amp;= \\frac{1}{36} + \\frac{2}{45} + \\frac{25}{396} + \\frac{25}{396} + \\frac{2}{45} + \\frac{1}{36} \\\\         &amp;= \\frac{134}{495} \\end{align} \\] <p>\u6240\u4ee5\u5f97\u5230\u73a9\u5bb6\u603b\u7684\u83b7\u80dc\u6982\u7387\u4e3a\uff1a</p> \\[ P(W) = P(W_1) + P(W_p) = \\frac{2}{9} + \\frac{134}{495} = \\frac{244}{495} \\approx 0.49293 \\] <p>\u6240\u4ee5\u73a9\u5bb6\u83b7\u80dc\u7684\u6982\u7387\u4e3a\u7ea6\u4e3a49.293%\u3002</p>"},{"location":"fifty/9_craps/#solution2-simulation","title":"Solution2: Simulation","text":"Solution2: Simulation English\u4e2d\u6587 <p>The overall process of the game is relatively simple, and we can simulate it through the following code:</p> <pre><code>import random\n\n\ndef roll_dice():\n    \"\"\"Roll two dice and return the sum.\"\"\"\n    return random.randint(1, 6) + random.randint(1, 6)\n\n\ndef play_craps():\n    \"\"\"Play one game of Craps.\"\"\"\n    first_roll = roll_dice()\n\n    if first_roll in [7, 11]:\n        return 1  # Win\n    elif first_roll in [2, 3, 12]:\n        return 0  # Lose\n    else:\n        point = first_roll\n        while True:\n            next_roll = roll_dice()\n            if next_roll == point:\n                return 1  # Win\n            elif next_roll == 7:\n                return 0  # Lose\n\n\ndef simulation(num_games=1000000):\n    \"\"\"Run a simulation of Craps games.\"\"\"\n    wins = sum(play_craps() for _ in range(num_games))\n    win_probability = wins / num_games\n    print(f\"Simulated probability of winning: {win_probability:.5f}\\n\")\n    print(f\"Theoretical probability of winning: 244/495 \u2248 {244 / 495:.5f}\\n\")\n\n\n# Run the simulation\nsimulation()\n</code></pre> <p>Simulated probability of winning: 0.49284</p> <p>Theoretical probability of winning: 244/495 \u2248 0.49293</p> <p>\u6e38\u620f\u7684\u8fc7\u7a0b\u603b\u4f53\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6a21\u62df:</p> <pre><code>import random\n\n\ndef roll_dice():\n    \"\"\"Roll two dice and return the sum.\"\"\"\n    return random.randint(1, 6) + random.randint(1, 6)\n\n\ndef play_craps():\n    \"\"\"Play one game of Craps.\"\"\"\n    first_roll = roll_dice()\n\n    if first_roll in [7, 11]:\n        return 1  # Win\n    elif first_roll in [2, 3, 12]:\n        return 0  # Lose\n    else:\n        point = first_roll\n        while True:\n            next_roll = roll_dice()\n            if next_roll == point:\n                return 1  # Win\n            elif next_roll == 7:\n                return 0  # Lose\n\n\ndef simulation(num_games=1000000):\n    \"\"\"Run a simulation of Craps games.\"\"\"\n    wins = sum(play_craps() for _ in range(num_games))\n    win_probability = wins / num_games\n    print(f\"Simulated probability of winning: {win_probability:.5f}\\n\")\n    print(f\"Theoretical probability of winning: 244/495 \u2248 {244 / 495:.5f}\\n\")\n\n\n# Run the simulation\nsimulation()\n</code></pre> <p>Simulated probability of winning: 0.49228</p> <p>Theoretical probability of winning: 244/495 \u2248 0.49293</p>"},{"location":"misc/","title":"\u6765\u81ea\u5404\u5904\u7684\u9898\u76ee","text":"<p>\u6536\u96c6\u6765\u81ea\u5404\u5904\u7684\u5355\u4e2a\u9898\u76ee (\u975e\u4e60\u9898\u96c6)\uff0c\u5982\u5404\u79cd\u6bd4\u8d5b\u3001\u5404\u79cd\u4e66\u7c4d\u7b49\u7b49\u3002</p>"},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/","title":"Expectation of Length of Maximum Monotone Sequence","text":""},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>Keep picking points uniformly randomly on [0,1]. If your current sequence is a monotonically increasing sequence, continue. What is the expected length of this monotonous sequence?</p> <p>The formal definition of the current problem is as follows: Remark: \\(\\mathbb{N} = \\{ 1,2,\\dots \\}\\).</p> <p>Consider the space \\(X = [0,1]^\\mathbb{N}\\), where a probability measure \\(p\\) is defined by selecting a sequence of points uniformly from the interval \\([0,1]\\). And given function \\(f: X \\rightarrow [0,1]\\) as:</p> \\[ f(\\gamma) = \\sup \\{     n \\in \\mathbb{N} \\mid \\gamma_i &lt; \\gamma_{i+1}, \\forall i &lt; n \\} \\] <p>Calculate \\(E[f(X)]\\).</p> <p>\u5728[0,1]\u4e0a\u5747\u5300\u968f\u673a\u7684\u4e00\u76f4\u53d6\u70b9\uff0c\u5982\u679c\u4f60\u5f53\u524d\u7684\u5e8f\u5217\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u5e8f\u5217\u5c31\u7ee7\u7eed\uff0c\u8bf7\u95ee\u8fd9\u4e2a\u5355\u8c03\u5e8f\u5217\u7684\u671f\u671b\u957f\u5ea6\u662f\u591a\u5c11\uff1f</p> <p>\u5f53\u524d\u95ee\u9898\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b: \u5907\u6ce8\uff1a\\(\\mathbb{N} = \\{ 1,2,\\dots \\}\\).</p> <p>\u8bbe\u7a7a\u95f4\\(X = [0,1]^\\mathbb{N}\\)\uff0c\u5176\u4e2d\u6982\u7387\u6d4b\u5ea6\\(p\\)\u901a\u8fc7\u4ece\u533a\u95f4\\([0,1]\\)\u4e2d\u5747\u5300\u9009\u62e9\u4e00\u4e2a\u5e8f\u5217\u7684\u70b9\u6765\u5b9a\u4e49\u3002\u7ed9\u5b9a\u51fd\u6570\\(f: X \\rightarrow [0,1]\\)\u5982\u4e0b\uff1a</p> \\[ f(\\gamma) = \\sup \\{     n \\in \\mathbb{N} \\mid \\gamma_i &lt; \\gamma_{i+1}, \\forall i &lt; n \\} \\] <p>\u8ba1\u7b97\\(E[f(X)]\\)\u3002</p>"},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Consider the probability that the monotone growing sequence stops at \\(n\\).</p> <p>\u8003\u8651\u5355\u8c03\u589e\u957f\u5e8f\u5217\u5728\\(n\\)\u5904\u505c\u6b62\u7684\u6982\u7387\u3002</p>"},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#solutions","title":"Solutions","text":""},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#solution1","title":"Solution1","text":"Solution1: Analysis English\u4e2d\u6587 <p>For \\(n\\in \\mathbb{N}\\), consider set \\(C_n = \\{     \\gamma \\in X \\mid f(\\gamma) \\ge n \\}\\), and \\(A_n = \\{     \\gamma \\in X \\mid f(\\gamma) = n \\}\\). And \\(A_\\infty = \\{     \\gamma \\in X \\mid f(\\gamma) = \\infty \\}\\).</p> <p>It is obvious that \\(C_1 \\supset C_2 \\supset \\dots \\supset C_\\infty\\) and \\(C_1 = X\\). It is also obvious that all \\(C_n\\) are measurable, as it can be written as countable union of measurable sets.</p> <p>Furthermore, sets in \\(\\{A_n \\mid n\\in\\mathbb{N}\\}\\cup\\{A_\\infty\\}\\) are mutually disjoint and \\(X = C_\\infty\\cup\\bigcup_{n\\in\\mathbb{N}} C_n\\). Also, \\(A_n = C_n \\setminus C_{n+1}\\). So \\(p(A_n) = p(C_n) - p(C_{n+1})\\).</p> <p>We can see that, \\(p(C_n)\\) can be easily calculated as it is the probability that the first \\(n\\) points are in increasing order. Thus,</p> \\[     \\begin{align}         p(C_n) &amp;= p(\\{             \\gamma\\in X \\mid \\gamma_1 &lt; \\gamma_2 &lt; \\dots &lt; \\gamma_n         \\}) \\\\         &amp;= \\int_0^1 \\int^1_{\\gamma_1} \\dots \\int^1_{\\gamma_{n-1}} d\\gamma_n \\dots d\\gamma_2 d\\gamma_1 \\\\         &amp;= \\frac{1}{n!}.     \\end{align} \\] <p>And therefore, we can see that, \\(p(A_n) = \\frac{1}{n!} - \\frac{1}{(n+1)!}\\). And</p> \\[     \\begin{align}         p(A_\\infty) &amp;= 1 - p\\left(             \\bigcup_{n\\in\\mathbb{N}} A_n         \\right) \\\\         &amp;= 1 - \\sum_{n\\in\\mathbb{N}} p(A_n) \\\\         &amp;= 1 - \\sum_{n\\in\\mathbb{N}} \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}         \\right) \\\\         &amp;= 0.     \\end{align} \\] <p>Finally, we can calculate \\(E[f(X)]\\) as:</p> \\[     \\begin{align}         E[f(X)] &amp;= \\infty \\times p(A_\\infty) + \\sum_{n\\in\\mathbb{N}} n p(A_n) \\\\         &amp;= 0 + \\sum_{n\\in\\mathbb{N}} n \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}         \\right).     \\end{align} \\] <p>By Taylor expansion, we can see that</p> \\[     \\frac{d}{dx} \\left(         e^x - \\frac{e^x -1}{x}     \\right) = \\sum_{n\\in\\mathbb{N}} n \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}     \\right) x^{n-1}. \\] <p>Therefore,</p> \\[     \\begin{align}         E[f(X)] &amp;= \\frac{d}{dx} \\left(             e^x - \\frac{e^x -1}{x}         \\right) \\Big|_{x=1} \\\\         &amp;= e - 1.     \\end{align} \\] <p>\u5bf9\u4e8e \\(n\\in \\mathbb{N}\\)\uff0c\u8003\u8651\u96c6\u5408 \\(C_n = \\{     \\gamma \\in X \\mid f(\\gamma) \\ge n \\}\\)\uff0c\u4ee5\u53ca \\(A_n = \\{     \\gamma \\in X \\mid f(\\gamma) = n \\}\\)\u3002\u518d\u5b9a\u4e49 \\(A_\\infty = \\{     \\gamma \\in X \\mid f(\\gamma) = \\infty \\}\\)\u3002</p> <p>\u663e\u7136 \\(C_1 \\supset C_2 \\supset \\dots \\supset C_\\infty\\) \u5e76\u4e14 \\(C_1 = X\\)\u3002 \u540c\u6837\u663e\u7136\uff0c\u6240\u6709\u7684 \\(C_n\\) \u90fd\u662f\u53ef\u6d4b\u96c6\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8868\u793a\u4e3a\u53ef\u6d4b\u96c6\u7684\u53ef\u6570\u5e76\u96c6\u3002</p> <p>\u6b64\u5916\uff0c\u96c6\u5408 \\(\\{A_n \\mid n\\in\\mathbb{N}\\}\\cup\\{A_\\infty\\}\\) \u662f\u4e92\u4e0d\u76f8\u4ea4\u7684\uff0c \u5e76\u4e14 \\(X = C_\\infty\\cup\\bigcup_{n\\in\\mathbb{N}} C_n\\)\u3002 \u540c\u65f6\uff0c\\(A_n = C_n \\setminus C_{n+1}\\)\uff0c\u6240\u4ee5 \\(p(A_n) = p(C_n) - p(C_{n+1})\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\\(p(C_n)\\) \u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97\u51fa\u6765\uff0c \u56e0\u4e3a\u5b83\u662f\u524d \\(n\\) \u4e2a\u70b9\u6309\u9012\u589e\u987a\u5e8f\u6392\u5217\u7684\u6982\u7387\u3002\u56e0\u6b64\uff0c</p> \\[     \\begin{align}         p(C_n) &amp;= p(\\{             \\gamma\\in X \\mid \\gamma_1 &lt; \\gamma_2 &lt; \\dots &lt; \\gamma_n         \\}) \\\\         &amp;= \\int_0^1 \\int^1_{\\gamma_1} \\dots \\int^1_{\\gamma_{n-1}} d\\gamma_n \\dots d\\gamma_2 d\\gamma_1 \\\\         &amp;= \\frac{1}{n!}\u3002     \\end{align} \\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\\(p(A_n) = \\frac{1}{n!} - \\frac{1}{(n+1)!}\\)\u3002\u63a5\u4e0b\u6765</p> \\[     \\begin{align}         p(A_\\infty) &amp;= 1 - p\\left(             \\bigcup_{n\\in\\mathbb{N}} A_n         \\right) \\\\         &amp;= 1 - \\sum_{n\\in\\mathbb{N}} p(A_n) \\\\         &amp;= 1 - \\sum_{n\\in\\mathbb{N}} \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}         \\right) \\\\         &amp;= 0\u3002     \\end{align} \\] <p>\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97 \\(E[f(X)]\\) \u5982\u4e0b\uff1a</p> \\[     \\begin{align}         E[f(X)] &amp;= \\infty \\times p(A_\\infty) + \\sum_{n\\in\\mathbb{N}} n p(A_n) \\\\         &amp;= 0 + \\sum_{n\\in\\mathbb{N}} n \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}         \\right)\u3002     \\end{align} \\] <p>\u901a\u8fc7\u6cf0\u52d2\u5c55\u5f00\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230</p> \\[     \\frac{d}{dx} \\left(         e^x - \\frac{e^x -1}{x}     \\right) = \\sum_{n\\in\\mathbb{N}} n \\left(             \\frac{1}{n!} - \\frac{1}{(n+1)!}     \\right) x^{n-1}\u3002 \\] <p>\u56e0\u6b64\uff0c</p> \\[     \\begin{align}         E[f(X)] &amp;= \\frac{d}{dx} \\left(             e^x - \\frac{e^x -1}{x}         \\right) \\Big|_{x=1} \\\\         &amp;= e - 1\u3002     \\end{align} \\]"},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#solution2","title":"Solution2","text":"Solution2: Analysis English\u4e2d\u6587 <p>Define the indicator variable \\(X_i\\):</p> <ul> <li>\\(X_i=1\\): The sequence remains strictly increasing before the \\(i\\)-th element</li> <li>\\(X_i=0\\): The sequence is no longer strictly increasing before the \\(i\\)-th element</li> </ul> <p>Then the sequence length \\(f\\) as the number of \\(X_i\\) that are 1, i.e., the number of elements before the sequence stops being strictly increasing. Therefore, the sequence length \\(f\\) can be expressed as the sum of these indicator variables:</p> \\[     f(X) = \\sum_{i}^{\\infty}X_i \\] <p>According to the linearity of expectation, we have:</p> \\[     E[f(X)] = E \\left[ \\sum_{i}^{\\infty}X_i \\right] = \\sum_{i}^{\\infty}E[X_i] \\] <p>Now let's calculate \\(E[X_i]\\). To ensure \\(E[X_i] = 1\\), the sequence formed by all points before the \\(i\\)-th point must be strictly increasing. The probability of randomly selecting \\(i\\) points in the interval \\([0, 1]\\) such that they form a strictly increasing sequence is \\(\\frac{1}{i!}\\):</p> \\[     E[X_i] = \\frac{1}{i!} \\] <p>Adding up all \\(E[X_i]\\), we get:</p> \\[     E[f(X)] = \\sum_{i=1}^{\\infty}\\frac{1}{i!} = e - 1 \\] <p>\u5b9a\u4e49\u6307\u793a\u53d8\u91cf\\(X_i\\):</p> <ul> <li>\\(X_i=1\\): \u5e8f\u5217\u5728\u7b2c\\(i\\)\u4e2a\u5143\u7d20\u4e4b\u524d\u4fdd\u6301\u5355\u8c03\u9012\u589e</li> <li>\\(X_i=0\\): \u5e8f\u5217\u5728\u7b2c\\(i\\)\u4e2a\u5143\u7d20\u4e4b\u524d\u4e0d\u518d\u4fdd\u6301\u5355\u8c03\u9012\u589e</li> </ul> <p>\u90a3\u4e48\u5e8f\u5217\u957f\u5ea6\\(f\\)\u5c31\u662f\u6240\u6709\\(X_i\\)\u4e3a 1 \u7684\u4e2a\u6570\uff0c\u5373\u5e8f\u5217\u5728\u505c\u6b62\u524d\u7684\u5143\u7d20\u6570\u76ee\u3002 \u56e0\u6b64\uff0c\u5e8f\u5217\u957f\u5ea6\\(f\\)\u53ef\u4ee5\u8868\u793a\u4e3a\u8fd9\u4e9b\u6307\u793a\u53d8\u91cf\u7684\u548c\uff1a</p> \\[     f(X) = \\sum_{i}^{\\infty}X_i \\] <p>\u6839\u636e\u671f\u671b\u503c\u7684\u7ebf\u6027\u6027\u8d28\uff0c\u6211\u4eec\u6709\uff1a</p> \\[     E[f(X)] = E \\left[ \\sum_{i}^{\\infty}X_i \\right] = \\sum_{i}^{\\infty}E[X_i] \\] <p>\u4e0b\u9762\u6211\u4eec\u6765\u8ba1\u7b97\\(E[X_i]\\), \u8981\u4fdd\u8bc1\\(E[X_i] = 1\\)\uff0c\u9700\u8981\u7b2c\\(i\\)\u4e2a\u70b9\u4e4b\u524d\u6240\u6709\u70b9\u5f62\u6210\u7684\u5e8f\u5217\u662f\u5355\u8c03\u9012\u589e\u7684\u3002 \u5728\\([0, 1]\\)\u533a\u95f4\u5185\u968f\u673a\u53d6\\(i\\)\u4e2a\u70b9\uff0c\u4f7f\u5176\u4e25\u683c\u9012\u589e\u7684\u6982\u7387\u662f\\(\\frac{1}{i!}\\):</p> \\[     E[X_i] = \\frac{1}{i!} \\] <p>\u5c06\u6240\u6709\\(E[X_i]\\)\u76f8\u52a0\uff0c\u5f97\u5230\uff1a</p> \\[     E[f(X)] = \\sum_{i=1}^{\\infty}\\frac{1}{i!} = e - 1 \\]"},{"location":"misc/1_expectation_of_length_of_maximum_monotone_sequence/#solution3-simulation","title":"Solution3: Simulation","text":"Solution3: Simulation English\u4e2d\u6587 <p>We can directly simulate the process of taking points to find the mean of the length of the monotone sequence as the numerical solution to this problem:</p> <pre><code>import math\nimport random\n\n\ndef random_point() -&gt; float:\n    return random.uniform(0, 1)\n\n\ndef run_once() -&gt; int:\n    pre_point = random_point()\n    sequence_length = 1\n    while True:\n        next_point = random_point()\n        if next_point &lt;= pre_point:\n            break\n        else:\n            sequence_length += 1\n            pre_point = next_point\n    return sequence_length\n\n\ndef simulation(run_nums: int = 1000000):\n    total_length = 0\n    for _ in range(run_nums):\n        sequence_length = run_once()\n        total_length += sequence_length\n    avg_length = total_length / run_nums\n    print(f\"Average length: {avg_length}\\n\")\n    print(f\"e - 1 = {math.e-1}\\n\")\n    return avg_length\n\n\nsimulation()\n</code></pre> <p>Average length: 1.718099</p> <p>e - 1 = 1.718281828459045</p> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\u53d6\u70b9\u7684\u8fc7\u7a0b\u6765\u6c42\u51fa\u5355\u8c03\u5e8f\u5217\u957f\u5ea6\u7684\u5747\u503c\u4f5c\u4e3a\u8be5\u95ee\u9898\u7684\u6570\u503c\u89e3:</p> <pre><code>import math\nimport random\n\n\ndef random_point() -&gt; float:\n    return random.uniform(0, 1)\n\n\ndef run_once() -&gt; int:\n    pre_point = random_point()\n    sequence_length = 1\n    while True:\n        next_point = random_point()\n        if next_point &lt;= pre_point:\n            break\n        else:\n            sequence_length += 1\n            pre_point = next_point\n    return sequence_length\n\n\ndef simulation(run_nums: int = 1000000):\n    total_length = 0\n    for _ in range(run_nums):\n        sequence_length = run_once()\n        total_length += sequence_length\n    avg_length = total_length / run_nums\n    print(f\"Average length: {avg_length}\\n\")\n    print(f\"e - 1 = {math.e-1}\\n\")\n    return avg_length\n\n\nsimulation()\n</code></pre> <p>Average length: 1.717999</p> <p>e - 1 = 1.718281828459045</p>"},{"location":"mystery/","title":"\u6982\u7387\u7834\u7384\u6a5f \u7d71\u8a08\u89e3\u8ff7\u96e2","text":"<p>\u4e66\uff1a\u6982\u7387\u7834\u7384\u6a5f \u7d71\u8a08\u89e3\u8ff7\u96e2</p>"},{"location":"mystery/3_fertility_policy/","title":"\u751f\u80b2\u653f\u7b56\u4e0e\u7537\u5973\u6bd4\u4f8b (Fertility Policy)","text":""},{"location":"mystery/3_fertility_policy/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>If a family stops having children after giving birth to a boy, and continues to have children after giving birth to a girl until a boy is born, the question is: What will the gender ratio be in this place?</p> <p>\u5982\u679c\u4e00\u4e2a\u5bb6\u5ead\u751f\u4e0b\u7537\u5b69\u5c31\u4e0d\u518d\u751f\u5b69\u5b50\uff0c\u5982\u679c\u662f\u5973\u5b69\u5b50\u5c31\u7ee7\u7eed\u751f\uff0c\u76f4\u5230\u751f\u51fa\u7537\u5b69\u4e3a\u6b62\uff0c\u95ee\uff1a\u8fd9\u4e2a\u5730\u65b9\u7684\u7537\u5973\u6bd4\u4f8b\u4f1a\u662f\u591a\u5c11\uff1f</p>"},{"location":"mystery/3_fertility_policy/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>There are many solutions, which can be approached from the perspectives of expectation, geometric distribution, probability, biology, etc.</p> <p>\u5f88\u591a\u79cd\u89e3\u6cd5\uff0c\u53ef\u4ee5\u4ece\u671f\u671b\u3001\u51e0\u4f55\u5206\u5e03\u3001\u6982\u7387\uff0c\u751f\u7269\u5b66\u7b49\u89d2\u5ea6\u5165\u624b\u3002</p>"},{"location":"mystery/3_fertility_policy/#solutions","title":"Solutions","text":""},{"location":"mystery/3_fertility_policy/#solution1-analysis","title":"Solution1: Analysis","text":"Solution1 English\u4e2d\u6587 <p>Since there is only one boy in a family, asking about the ratio of boys to girls is equivalent to asking the average number of girls per family.</p> <p>Let the number of girls in a family be \\(X\\), and the average number of girls per family be \\(E(X)\\), and the problem is transformed into solving \\(1:E(X)\\).</p> <p>Since the probability of having a boy and a girl is equal, the distribution of X is as follows:</p> X Sequence Probability 0 Male \\(\\frac{1}{2}\\) 1 Female, Male \\((\\frac{1}{2})^2\\) 2 Female, Female, Male \\((\\frac{1}{2})^3\\) 3 Female, Female, Female, Male \\((\\frac{1}{2})^4\\) <p>According to the definition of expectation, \\(E(X)\\) satisfies the following equation:</p> \\[ \\begin{align}     E(X) &amp;= \\frac{1}{2} \\times 0 + (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\\\          &amp;= (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\end{align} \\] <p>Therefore,</p> \\[     2E(X) = (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 2 + \\cdots \\] <p>Subtracting the two equations, we get:</p> \\[ \\begin{align}     E(X) &amp;= (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 1 + \\cdots \\\\          &amp;= lim_{n\\to\\infty} \\frac{\\frac{1}{2}(1-(\\frac{1}{2})^n)}{1-\\frac{1}{2}} \\\\          &amp;= \\frac{\\frac{1}{2} \\times 1}{\\frac{1}{2}} \\\\          &amp;= 1 \\end{align} \\] <p>\u56e0\u4e3a\u4e00\u4e2a\u5bb6\u5ead\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7537\u5b69\uff0c\u6240\u4ee5\u95ee\u7537\u5973\u6bd4\u4f8b\u7b49\u4ef7\u4e8e\u95ee\u5e73\u5747\u6bcf\u4e2a\u5bb6\u5ead\u5973\u5b69\u7684\u6570\u91cf\u3002 \u8bbe\u5bb6\u5ead\u4e2d\u5973\u5b69\u7684\u6570\u91cf\u4e3a\\(X\\), \u5e73\u5747\u6bcf\u4e2a\u5bb6\u5ead\u5973\u5b69\u7684\u6570\u91cf\u5219\u4e3a\\(E(X)\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\\(1:E(X)\\)\u3002</p> <p>\u7531\u4e8e\u751f\u7537\u5b69\u548c\u751f\u5973\u5b69\u7684\u6982\u7387\u76f8\u7b49\uff0cX\u7684\u5206\u5e03\u5982\u4e0b\uff1a</p> X Sequence Probability 0 \u7537 \\(\\frac{1}{2}\\) 1 \u5973\u7537 \\((\\frac{1}{2})^2\\) 2 \u5973\u5973\u7537 \\((\\frac{1}{2})^3\\) 3 \u5973\u5973\u5973\u7537 \\((\\frac{1}{2})^4\\) ... ... ... <p>\u6839\u636e\u671f\u671b\u7684\u5b9a\u4e49, \\(E(X)\\)\u6ee1\u8db3\u4e0b\u5f0f\uff1a</p> \\[ \\begin{align}     E(X) &amp;= \\frac{1}{2} \\times 0 + (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\\\          &amp;= (\\frac{1}{2})^2 \\times 1 + (\\frac{1}{2})^3 \\times 2 + \\cdots \\end{align} \\] <p>\u56e0\u6b64,</p> \\[     2E(X) = (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 2 + \\cdots \\] <p>\u4e24\u5f0f\u76f8\u51cf\u5f97\u5230\uff1a</p> \\[ \\begin{align}     E(X) &amp;= (\\frac{1}{2})^1 \\times 1 + (\\frac{1}{2})^2 \\times 1 + \\cdots \\\\          &amp;= lim_{n\\to\\infty} \\frac{\\frac{1}{2}(1-(\\frac{1}{2})^n)}{1-\\frac{1}{2}} \\\\          &amp;= \\frac{\\frac{1}{2} \\times 1}{\\frac{1}{2}} \\\\          &amp;= 1 \\end{align} \\]"},{"location":"mystery/3_fertility_policy/#solution2-analysis","title":"Solution2: Analysis","text":"Solution2 English\u4e2d\u6587 <p>Define that when a family gives birth to a boy, the total number of children in the current family is \\(X\\), and the number of girls is \\(Y\\), then \\(X\\) meets the definition of geometric distribution (strictly speaking, it should be shifted geometric distribution), which is the probability distribution of the number of first successes in the Bernoulli test, and \\(p=\\frac{1}{2}\\). According to the expected formula of geometric distribution, we have:</p> \\[ E(X) = \\frac{1}{p} = 2 \\] <p>Because the number of boys is 1, the number of girls is \\(Y=X-1\\), so we have:</p> \\[ E(Y) = E(X-1) = E(X) - 1 = 1 \\] <p>That is, there is an average of 1 girl in each family, so the ratio of boys to girls is 1:1.</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u5bb6\u5ead\u751f\u4e0b\u7537\u5b69\u65f6\uff0c\u5f53\u524d\u5bb6\u5ead\u5b69\u5b50\u7684\u603b\u6570\u91cf\u4e3a\\(X\\), \u5973\u5b69\u6570\u91cf\u4e3a\\(Y\\), \u5219\\(X\\)\u7b26\u5408\u51e0\u4f55\u5206\u5e03(\u4e25\u683c\u6765\u8bf4\u5e94\u8be5\u662fshifted geometric distribution)\u7684\u5b9a\u4e49\uff0c \u5373\u4e3aBernoulli\u8bd5\u9a8c\u4e2d\u7b2c\u4e00\u6b21\u6210\u529f\u7684\u6b21\u6570\u7684\u6982\u7387\u5206\u5e03, \u6b64\u65f6\\(p=\\frac{1}{2}\\)\u3002 \u6839\u636e\u51e0\u4f55\u5206\u5e03\u7684\u671f\u671b\u516c\u5f0f\uff0c\u6709:</p> \\[     E(X) = \\frac{1}{p} = 2 \\] <p>\u56e0\u4e3a\u7537\u5b69\u6570\u91cf\u4e3a1\uff0c\u6240\u4ee5\u5973\u5b69\u6570\u91cf\u4e3a\\(Y=X-1\\)\uff0c\u6240\u4ee5\u6709:</p> \\[     E(Y) = E(X-1) = E(X) - 1 = 1 \\] <p>\u5373\u6bcf\u4e2a\u5bb6\u5ead\u5e73\u5747\u67091\u4e2a\u5973\u5b69\uff0c\u6240\u4ee5\u7537\u5973\u6bd4\u4f8b\u4e3a1:1\u3002</p>"},{"location":"mystery/3_fertility_policy/#solution3-elegant-analysis","title":"Solution3: Elegant Analysis","text":"Solution3 English\u4e2d\u6587 <p>Consider a birth process as an event, let event A be the birth of a boy, and event B be the birth of a girl. Then: \\(P(A) = \\frac{1}{2}\\), \\(P(B) = \\frac{1}{2}\\). Regardless of the birth policy, it is ultimately a series of independent birth events, so the final male-female ratio is 1:1.</p> <p>\u628a\u4e00\u6b21\u751f\u80b2\u8fc7\u7a0b\u770b\u4f5c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u8bbe\u4e8b\u4ef6A\u4e3a\u751f\u7537\u5b69\uff0c\u4e8b\u4ef6B\u4e3a\u751f\u5973\u5b69\u3002 \u5219\u6709: \\(P(A) = \\frac{1}{2}\\), \\(P(B) = \\frac{1}{2}\\). \u65e0\u8bba\u751f\u80b2\u653f\u7b56\u5982\u4f55\uff0c\u6700\u7ec8\u90fd\u662f\u4e00\u7cfb\u5217\u76f8\u4e92\u72ec\u7acb\u7684\u751f\u80b2\u4e8b\u4ef6\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u7537\u5973\u6bd4\u4f8b\u662f1:1\u3002</p>"},{"location":"mystery/3_fertility_policy/#solution4-simulation","title":"Solution4: Simulation","text":"Solution4 English\u4e2d\u6587 <p>We can simulate the birth process to obtain the numerical solution of the gender ratio under the current fertility policy:</p> <pre><code>import random\n\nfrom enum import Enum\n\n\nclass Gender(int, Enum):\n    MALE = 0\n    FEMALE = 1\n\n\ndef birth_event() -&gt; Gender:\n    if random.randint(0, 1) == 0:\n        return Gender.MALE\n    else:\n        return Gender.FEMALE\n\n\ndef family_event() -&gt; int:\n    female_count = 0\n    while birth_event() != Gender.MALE:\n        female_count += 1\n    return female_count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    male_count, female_count = 0, 0\n    for _ in range(run_nums):\n        female_count += family_event()\n        male_count += 1\n    print(f\"Males: {male_count}, Females: {female_count}\\n\")\n    print(f\"Males/Female: {male_count / female_count}\\n\")\n\n\nsimulation()\n</code></pre> <p>Males: 100000, Females: 100031</p> <p>Males/Female: 0.9996900960702182</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u751f\u80b2\u7684\u8fc7\u7a0b\u6765\u5f97\u5230\u5f53\u524d\u751f\u80b2\u653f\u7b56\u4e0b\u6027\u522b\u6bd4\u4f8b\u7684\u6570\u503c\u89e3:</p> <pre><code>import random\n\nfrom enum import Enum\n\n\nclass Gender(int, Enum):\n    MALE = 0\n    FEMALE = 1\n\n\ndef birth_event() -&gt; Gender:\n    if random.randint(0, 1) == 0:\n        return Gender.MALE\n    else:\n        return Gender.FEMALE\n\n\ndef family_event() -&gt; int:\n    female_count = 0\n    while birth_event() != Gender.MALE:\n        female_count += 1\n    return female_count\n\n\ndef simulation(run_nums: int = 100000) -&gt; None:\n    male_count, female_count = 0, 0\n    for _ in range(run_nums):\n        female_count += family_event()\n        male_count += 1\n    print(f\"Males: {male_count}, Females: {female_count}\\n\")\n    print(f\"Males/Female: {male_count / female_count}\\n\")\n\n\nsimulation()\n</code></pre> <p>Males: 100000, Females: 100270</p> <p>Males/Female: 0.997307270370001</p>"},{"location":"util/problem_template/","title":"The Problem Name","text":""},{"location":"util/problem_template/#problem","title":"Problem","text":"Question English\u4e2d\u6587 <p>The question in English</p> <p>\u9898\u76ee\u63cf\u8ff0</p>"},{"location":"util/problem_template/#tip","title":"Tip","text":"Tip English\u4e2d\u6587 <p>Provide some tips/hints that are helpful to solve the problem. Be careful not to leak the answer here.</p> <p>\u63d0\u4f9b\u89e3\u9898\u63d0\u793a\u4e0e\u7ebf\u7d22\u3002\u6ce8\u610f\u4e0d\u8981\u5728\u8fd9\u91cc\u6cc4\u6f0f\u7b54\u6848</p>"},{"location":"util/problem_template/#solutions","title":"Solutions","text":""},{"location":"util/problem_template/#solution1","title":"Solution1","text":"Solution1 English\u4e2d\u6587 <p>The solution</p> <p>\u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848</p>"},{"location":"util/problem_template/#optionalsolution2","title":"(Optional)Solution2","text":"Solution2 English\u4e2d\u6587 <p>The solution</p> <p>\u89e3\u9898\u8fc7\u7a0b\u4e0e\u7b54\u6848</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/mystery/","title":"MyStery","text":""},{"location":"blog/category/problem/","title":"Problem","text":""},{"location":"blog/category/general/","title":"General","text":""},{"location":"blog/category/fifty/","title":"Fifty","text":""}]}